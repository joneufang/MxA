"use strict";
/* tslint:disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var internal = require("../sdk/internal");
exports.StructureVersionInfo = internal.StructureVersionInfo;
var projects_1 = require("./projects");
var menus;
(function (menus) {
    /**
     * Interfaces and instance classes for types from the Mendix sub meta model `Menus`.
     */
    /**
     * See: {@link https://docs.mendix.com/refguide7/menu relevant section in reference guide}
     */
    var MenuDocument = /** @class */ (function (_super) {
        __extends(MenuDocument, _super);
        function MenuDocument(model, structureTypeName, id, isPartial, container) {
            var _this = _super.call(this, model, structureTypeName, id, isPartial, container) || this;
            /** @internal */
            _this.__itemCollection = new internal.PartProperty(MenuDocument, _this, "itemCollection", null, true);
            _this._containmentName = "documents";
            return _this;
        }
        Object.defineProperty(MenuDocument.prototype, "containerAsFolderBase", {
            get: function () { return _super.prototype.getContainerAs.call(this, projects_1.projects.FolderBase); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MenuDocument.prototype, "itemCollection", {
            get: function () { return this.__itemCollection.get(); },
            set: function (newValue) { this.__itemCollection.set(newValue); },
            enumerable: true,
            configurable: true
        });
        /**
         * Creates a new MenuDocument unit in the SDK and on the server.
         * Expects one argument, the projects.IFolderBase in which this unit is contained.
         */
        MenuDocument.createIn = function (container) {
            return internal.instancehelpers.createUnit(container, MenuDocument);
        };
        /** @internal */
        MenuDocument.prototype._isByNameReferrable = function () { return true; };
        /** @internal */
        MenuDocument.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
            this.itemCollection = MenuItemCollection.create(this.model);
        };
        MenuDocument.structureTypeName = "Menus$MenuDocument";
        MenuDocument.versionInfo = new exports.StructureVersionInfo({
            "properties": {
                "itemCollection": {
                    "required": {
                        "currentValue": true
                    }
                }
            }
        }, internal.StructureType.ModelUnit);
        return MenuDocument;
    }(projects_1.projects.Document));
    menus.MenuDocument = MenuDocument;
    var MenuItemContainer = /** @class */ (function (_super) {
        __extends(MenuItemContainer, _super);
        function MenuItemContainer(model, structureTypeName, id, isPartial, unit, container) {
            var _this = _super.call(this, model, structureTypeName, id, isPartial, unit, container) || this;
            /** @internal */
            _this.__items = new internal.PartListProperty(MenuItemContainer, _this, "items", []);
            if (arguments.length < 4) {
                throw new Error("new MenuItemContainer() cannot be invoked directly, please use 'model.menus.createMenuItemContainer()'");
            }
            return _this;
        }
        Object.defineProperty(MenuItemContainer.prototype, "containerAsMenuDocument", {
            get: function () { return _super.prototype.getContainerAs.call(this, MenuDocument); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MenuItemContainer.prototype, "containerAsMenuItemContainer", {
            get: function () { return _super.prototype.getContainerAs.call(this, MenuItemContainer); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MenuItemContainer.prototype, "containerAsNavigationProfile", {
            get: function () { return _super.prototype.getContainerAs.call(this, navigation_1.navigation.NavigationProfile); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MenuItemContainer.prototype, "items", {
            get: function () { return this.__items.get(); },
            enumerable: true,
            configurable: true
        });
        /** @internal */
        MenuItemContainer.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
        };
        MenuItemContainer.structureTypeName = "Menus$MenuItemContainer";
        MenuItemContainer.versionInfo = new exports.StructureVersionInfo({}, internal.StructureType.Element);
        return MenuItemContainer;
    }(internal.Element));
    menus.MenuItemContainer = MenuItemContainer;
    /**
     * See: {@link https://docs.mendix.com/refguide7/menu-item relevant section in reference guide}
     */
    var MenuItem = /** @class */ (function (_super) {
        __extends(MenuItem, _super);
        function MenuItem(model, structureTypeName, id, isPartial, unit, container) {
            var _this = _super.call(this, model, structureTypeName, id, isPartial, unit, container) || this;
            /** @internal */
            _this.__caption = new internal.PartProperty(MenuItem, _this, "caption", null, true);
            /** @internal */
            _this.__icon = new internal.PartProperty(MenuItem, _this, "icon", null, false);
            /** @internal */
            _this.__action = new internal.PartProperty(MenuItem, _this, "action", null, true);
            if (arguments.length < 4) {
                throw new Error("new MenuItem() cannot be invoked directly, please use 'model.menus.createMenuItem()'");
            }
            return _this;
        }
        Object.defineProperty(MenuItem.prototype, "containerAsMenuItemContainer", {
            get: function () { return _super.prototype.getContainerAs.call(this, MenuItemContainer); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MenuItem.prototype, "caption", {
            get: function () { return this.__caption.get(); },
            set: function (newValue) { this.__caption.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MenuItem.prototype, "icon", {
            get: function () { return this.__icon.get(); },
            set: function (newValue) { this.__icon.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MenuItem.prototype, "action", {
            get: function () { return this.__action.get(); },
            set: function (newValue) { this.__action.set(newValue); },
            enumerable: true,
            configurable: true
        });
        /**
         * Creates and returns a new MenuItem instance in the SDK and on the server.
         * The new MenuItem will be automatically stored in the 'items' property
         * of the parent MenuItemContainer element passed as argument.
         */
        MenuItem.createIn = function (container) {
            return internal.instancehelpers.createElement(container, MenuItem, "items", true);
        };
        /**
         * Creates and returns a new MenuItem instance in the SDK and on the server.
         * Expects one argument: the IModel object the instance will "live on".
         * After creation, assign or add this instance to a property that accepts this kind of objects.
         */
        MenuItem.create = function (model) {
            return internal.instancehelpers.createElement(model, MenuItem);
        };
        /** @internal */
        MenuItem.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
            this.action = pages_1.pages.NoClientAction.create(this.model);
            this.caption = texts_1.texts.Text.create(this.model);
        };
        MenuItem.structureTypeName = "Menus$MenuItem";
        MenuItem.versionInfo = new exports.StructureVersionInfo({
            "properties": {
                "caption": {
                    "required": {
                        "currentValue": true
                    }
                },
                "action": {
                    "required": {
                        "currentValue": true
                    }
                }
            }
        }, internal.StructureType.Element);
        return MenuItem;
    }(MenuItemContainer));
    menus.MenuItem = MenuItem;
    var MenuItemCollection = /** @class */ (function (_super) {
        __extends(MenuItemCollection, _super);
        function MenuItemCollection(model, structureTypeName, id, isPartial, unit, container) {
            var _this = _super.call(this, model, structureTypeName, id, isPartial, unit, container) || this;
            if (arguments.length < 4) {
                throw new Error("new MenuItemCollection() cannot be invoked directly, please use 'model.menus.createMenuItemCollection()'");
            }
            return _this;
        }
        Object.defineProperty(MenuItemCollection.prototype, "containerAsMenuDocument", {
            get: function () { return _super.prototype.getContainerAs.call(this, MenuDocument); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MenuItemCollection.prototype, "containerAsNavigationProfile", {
            get: function () { return _super.prototype.getContainerAs.call(this, navigation_1.navigation.NavigationProfile); },
            enumerable: true,
            configurable: true
        });
        /**
         * Creates and returns a new MenuItemCollection instance in the SDK and on the server.
         * The new MenuItemCollection will be automatically stored in the 'itemCollection' property
         * of the parent MenuDocument element passed as argument.
         */
        MenuItemCollection.createInMenuDocumentUnderItemCollection = function (container) {
            return internal.instancehelpers.createElement(container, MenuItemCollection, "itemCollection", false);
        };
        /**
         * Creates and returns a new MenuItemCollection instance in the SDK and on the server.
         * The new MenuItemCollection will be automatically stored in the 'menuItemCollection' property
         * of the parent navigation.NavigationProfile element passed as argument.
         */
        MenuItemCollection.createInNavigationProfileUnderMenuItemCollection = function (container) {
            return internal.instancehelpers.createElement(container, MenuItemCollection, "menuItemCollection", false);
        };
        /**
         * Creates and returns a new MenuItemCollection instance in the SDK and on the server.
         * Expects one argument: the IModel object the instance will "live on".
         * After creation, assign or add this instance to a property that accepts this kind of objects.
         */
        MenuItemCollection.create = function (model) {
            return internal.instancehelpers.createElement(model, MenuItemCollection);
        };
        /** @internal */
        MenuItemCollection.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
        };
        MenuItemCollection.structureTypeName = "Menus$MenuItemCollection";
        MenuItemCollection.versionInfo = new exports.StructureVersionInfo({}, internal.StructureType.Element);
        return MenuItemCollection;
    }(MenuItemContainer));
    menus.MenuItemCollection = MenuItemCollection;
})(menus = exports.menus || (exports.menus = {}));
var navigation_1 = require("./navigation");
var pages_1 = require("./pages");
var texts_1 = require("./texts");
//# sourceMappingURL=menus.js.map