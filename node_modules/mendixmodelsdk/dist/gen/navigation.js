"use strict";
/* tslint:disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var internal = require("../sdk/internal");
exports.StructureVersionInfo = internal.StructureVersionInfo;
var projects_1 = require("./projects");
var navigation;
(function (navigation) {
    var DeviceType = /** @class */ (function (_super) {
        __extends(DeviceType, _super);
        function DeviceType() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.qualifiedTsTypeName = "navigation.DeviceType";
            return _this;
        }
        DeviceType.Desktop = new DeviceType("Desktop", {});
        DeviceType.Tablet = new DeviceType("Tablet", {});
        DeviceType.Phone = new DeviceType("Phone", {});
        return DeviceType;
    }(internal.AbstractEnum));
    navigation.DeviceType = DeviceType;
    var ProfileKind = /** @class */ (function (_super) {
        __extends(ProfileKind, _super);
        function ProfileKind() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.qualifiedTsTypeName = "navigation.ProfileKind";
            return _this;
        }
        ProfileKind.Responsive = new ProfileKind("Responsive", {});
        ProfileKind.Tablet = new ProfileKind("Tablet", {});
        ProfileKind.Phone = new ProfileKind("Phone", {});
        ProfileKind.Hybrid = new ProfileKind("Hybrid", {
            "deleted": "7.4.0",
            "deletionMessage": null
        });
        ProfileKind.HybridOffline = new ProfileKind("HybridOffline", {
            "deleted": "7.4.0",
            "deletionMessage": null
        });
        ProfileKind.HybridTablet = new ProfileKind("HybridTablet", {
            "introduced": "7.4.0"
        });
        ProfileKind.HybridTabletOffline = new ProfileKind("HybridTabletOffline", {
            "introduced": "7.4.0"
        });
        ProfileKind.HybridPhone = new ProfileKind("HybridPhone", {
            "introduced": "7.4.0"
        });
        ProfileKind.HybridPhoneOffline = new ProfileKind("HybridPhoneOffline", {
            "introduced": "7.4.0"
        });
        return ProfileKind;
    }(internal.AbstractEnum));
    navigation.ProfileKind = ProfileKind;
    var ProfileType = /** @class */ (function (_super) {
        __extends(ProfileType, _super);
        function ProfileType() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.qualifiedTsTypeName = "navigation.ProfileType";
            return _this;
        }
        ProfileType.Desktop = new ProfileType("Desktop", {});
        ProfileType.Tablet = new ProfileType("Tablet", {});
        ProfileType.Phone = new ProfileType("Phone", {});
        ProfileType.HybridTablet = new ProfileType("HybridTablet", {
            "introduced": "7.0.2"
        });
        ProfileType.HybridPhone = new ProfileType("HybridPhone", {
            "introduced": "7.0.2"
        });
        ProfileType.OfflinePhone = new ProfileType("OfflinePhone", {
            "deleted": "7.0.2",
            "deletionMessage": null
        });
        ProfileType.HybridPhone6 = new ProfileType("HybridPhone6", {
            "introduced": "6.10.4",
            "deleted": "7.0.0",
            "deletionMessage": null
        });
        ProfileType.HybridTablet6 = new ProfileType("HybridTablet6", {
            "introduced": "6.10.4",
            "deleted": "7.0.0",
            "deletionMessage": null
        });
        return ProfileType;
    }(internal.AbstractEnum));
    navigation.ProfileType = ProfileType;
    /**
     * Interfaces and instance classes for types from the Mendix sub meta model `Navigation`.
     */
    var HomePageBase = /** @class */ (function (_super) {
        __extends(HomePageBase, _super);
        function HomePageBase(model, structureTypeName, id, isPartial, unit, container) {
            var _this = _super.call(this, model, structureTypeName, id, isPartial, unit, container) || this;
            /** @internal */
            _this.__page = new internal.ByNameReferenceProperty(HomePageBase, _this, "page", null, "Pages$Page");
            /** @internal */
            _this.__microflow = new internal.ByNameReferenceProperty(HomePageBase, _this, "microflow", null, "Microflows$Microflow");
            if (arguments.length < 4) {
                throw new Error("new HomePageBase() cannot be invoked directly, please use 'model.navigation.createHomePageBase()'");
            }
            return _this;
        }
        Object.defineProperty(HomePageBase.prototype, "containerAsNavigationProfile", {
            get: function () { return _super.prototype.getContainerAs.call(this, NavigationProfile); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(HomePageBase.prototype, "page", {
            get: function () { return this.__page.get(); },
            set: function (newValue) { this.__page.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(HomePageBase.prototype, "pageQualifiedName", {
            get: function () { return this.__page.qualifiedName(); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(HomePageBase.prototype, "microflow", {
            get: function () { return this.__microflow.get(); },
            set: function (newValue) { this.__microflow.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(HomePageBase.prototype, "microflowQualifiedName", {
            get: function () { return this.__microflow.qualifiedName(); },
            enumerable: true,
            configurable: true
        });
        /** @internal */
        HomePageBase.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
        };
        HomePageBase.structureTypeName = "Navigation$HomePageBase";
        HomePageBase.versionInfo = new exports.StructureVersionInfo({}, internal.StructureType.Element);
        return HomePageBase;
    }(internal.Element));
    navigation.HomePageBase = HomePageBase;
    var HomePage = /** @class */ (function (_super) {
        __extends(HomePage, _super);
        function HomePage(model, structureTypeName, id, isPartial, unit, container) {
            var _this = _super.call(this, model, structureTypeName, id, isPartial, unit, container) || this;
            if (arguments.length < 4) {
                throw new Error("new HomePage() cannot be invoked directly, please use 'model.navigation.createHomePage()'");
            }
            return _this;
        }
        Object.defineProperty(HomePage.prototype, "containerAsNavigationProfile", {
            get: function () { return _super.prototype.getContainerAs.call(this, NavigationProfile); },
            enumerable: true,
            configurable: true
        });
        /**
         * Creates and returns a new HomePage instance in the SDK and on the server.
         * The new HomePage will be automatically stored in the 'homePage' property
         * of the parent NavigationProfile element passed as argument.
         */
        HomePage.createIn = function (container) {
            return internal.instancehelpers.createElement(container, HomePage, "homePage", false);
        };
        /**
         * Creates and returns a new HomePage instance in the SDK and on the server.
         * Expects one argument: the IModel object the instance will "live on".
         * After creation, assign or add this instance to a property that accepts this kind of objects.
         */
        HomePage.create = function (model) {
            return internal.instancehelpers.createElement(model, HomePage);
        };
        /** @internal */
        HomePage.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
        };
        HomePage.structureTypeName = "Navigation$HomePage";
        HomePage.versionInfo = new exports.StructureVersionInfo({}, internal.StructureType.Element);
        return HomePage;
    }(HomePageBase));
    navigation.HomePage = HomePage;
    /**
     * See: {@link https://docs.mendix.com/refguide7/navigation relevant section in reference guide}
     */
    var NavigationDocument = /** @class */ (function (_super) {
        __extends(NavigationDocument, _super);
        function NavigationDocument(model, structureTypeName, id, isPartial, container) {
            var _this = _super.call(this, model, structureTypeName, id, isPartial, container) || this;
            /** @internal */
            _this.__profiles = new internal.PartListProperty(NavigationDocument, _this, "profiles", []);
            /** @internal */
            _this.__phoneProfile = new internal.PartProperty(NavigationDocument, _this, "phoneProfile", null, true);
            /** @internal */
            _this.__tabletProfile = new internal.PartProperty(NavigationDocument, _this, "tabletProfile", null, true);
            /** @internal */
            _this.__desktopProfile = new internal.PartProperty(NavigationDocument, _this, "desktopProfile", null, true);
            /** @internal */
            _this.__hybridTabletProfile = new internal.PartProperty(NavigationDocument, _this, "hybridTabletProfile", null, true);
            /** @internal */
            _this.__hybridPhoneProfile = new internal.PartProperty(NavigationDocument, _this, "hybridPhoneProfile", null, true);
            /** @internal */
            _this.__offlinePhoneProfile = new internal.PartProperty(NavigationDocument, _this, "offlinePhoneProfile", null, true);
            /** @internal */
            _this.__hybridPhoneProfile6 = new internal.PartProperty(NavigationDocument, _this, "hybridPhoneProfile6", null, true);
            /** @internal */
            _this.__hybridTabletProfile6 = new internal.PartProperty(NavigationDocument, _this, "hybridTabletProfile6", null, true);
            _this._containmentName = "projectDocuments";
            return _this;
        }
        Object.defineProperty(NavigationDocument.prototype, "containerAsProject", {
            get: function () { return _super.prototype.getContainerAs.call(this, projects_1.projects.Project); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NavigationDocument.prototype, "profiles", {
            /**
             * In version 7.2.0: introduced
             */
            get: function () { return this.__profiles.get(); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NavigationDocument.prototype, "phoneProfile", {
            /**
             * In version 7.2.0: deleted
             */
            get: function () { return this.__phoneProfile.get(); },
            set: function (newValue) { this.__phoneProfile.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NavigationDocument.prototype, "tabletProfile", {
            /**
             * In version 7.2.0: deleted
             */
            get: function () { return this.__tabletProfile.get(); },
            set: function (newValue) { this.__tabletProfile.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NavigationDocument.prototype, "desktopProfile", {
            /**
             * In version 7.2.0: deleted
             */
            get: function () { return this.__desktopProfile.get(); },
            set: function (newValue) { this.__desktopProfile.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NavigationDocument.prototype, "hybridTabletProfile", {
            /**
             * In version 7.2.0: deleted
             * In version 7.0.2: introduced
             */
            get: function () { return this.__hybridTabletProfile.get(); },
            set: function (newValue) { this.__hybridTabletProfile.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NavigationDocument.prototype, "hybridPhoneProfile", {
            /**
             * In version 7.2.0: deleted
             * In version 7.0.2: introduced
             */
            get: function () { return this.__hybridPhoneProfile.get(); },
            set: function (newValue) { this.__hybridPhoneProfile.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NavigationDocument.prototype, "offlinePhoneProfile", {
            /**
             * In version 7.0.2: deleted
             */
            get: function () { return this.__offlinePhoneProfile.get(); },
            set: function (newValue) { this.__offlinePhoneProfile.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NavigationDocument.prototype, "hybridPhoneProfile6", {
            /**
             * In version 7.0.0: deleted
             * In version 6.10.4: introduced
             */
            get: function () { return this.__hybridPhoneProfile6.get(); },
            set: function (newValue) { this.__hybridPhoneProfile6.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NavigationDocument.prototype, "hybridTabletProfile6", {
            /**
             * In version 7.0.0: deleted
             * In version 6.10.4: introduced
             */
            get: function () { return this.__hybridTabletProfile6.get(); },
            set: function (newValue) { this.__hybridTabletProfile6.set(newValue); },
            enumerable: true,
            configurable: true
        });
        /**
         * Creates a new NavigationDocument unit in the SDK and on the server.
         * Expects one argument, the projects.IProject in which this unit is contained.
         */
        NavigationDocument.createIn = function (container) {
            return internal.instancehelpers.createUnit(container, NavigationDocument);
        };
        /** @internal */
        NavigationDocument.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
            if (this.__desktopProfile.isAvailable) {
                this.desktopProfile = NavigationProfile.create(this.model);
            }
            if (this.__hybridPhoneProfile.isAvailable) {
                this.hybridPhoneProfile = NavigationProfile.create(this.model);
            }
            if (this.__hybridPhoneProfile6.isAvailable) {
                this.hybridPhoneProfile6 = NavigationProfile.create(this.model);
            }
            if (this.__hybridTabletProfile.isAvailable) {
                this.hybridTabletProfile = NavigationProfile.create(this.model);
            }
            if (this.__hybridTabletProfile6.isAvailable) {
                this.hybridTabletProfile6 = NavigationProfile.create(this.model);
            }
            if (this.__offlinePhoneProfile.isAvailable) {
                this.offlinePhoneProfile = NavigationProfile.create(this.model);
            }
            if (this.__phoneProfile.isAvailable) {
                this.phoneProfile = NavigationProfile.create(this.model);
            }
            if (this.__profiles.isAvailable) {
                this.profiles.replace([(function (navigationProfile) {
                        navigationProfile.name = "Responsive";
                        navigationProfile.kind = ProfileKind.Responsive;
                        return navigationProfile;
                    })(NavigationProfile.create(this.model))]);
            }
            if (this.__tabletProfile.isAvailable) {
                this.tabletProfile = NavigationProfile.create(this.model);
            }
        };
        NavigationDocument.structureTypeName = "Navigation$NavigationDocument";
        NavigationDocument.versionInfo = new exports.StructureVersionInfo({
            "properties": {
                "profiles": {
                    "introduced": "7.2.0",
                    "public": {
                        "currentValue": true
                    }
                },
                "phoneProfile": {
                    "deleted": "7.2.0",
                    "deletionMessage": null,
                    "required": {
                        "currentValue": true
                    }
                },
                "tabletProfile": {
                    "deleted": "7.2.0",
                    "deletionMessage": null,
                    "required": {
                        "currentValue": true
                    }
                },
                "desktopProfile": {
                    "deleted": "7.2.0",
                    "deletionMessage": null,
                    "required": {
                        "currentValue": true
                    }
                },
                "hybridTabletProfile": {
                    "introduced": "7.0.2",
                    "deleted": "7.2.0",
                    "deletionMessage": null,
                    "required": {
                        "currentValue": true
                    }
                },
                "hybridPhoneProfile": {
                    "introduced": "7.0.2",
                    "deleted": "7.2.0",
                    "deletionMessage": null,
                    "required": {
                        "currentValue": true
                    }
                },
                "offlinePhoneProfile": {
                    "deleted": "7.0.2",
                    "deletionMessage": null,
                    "required": {
                        "currentValue": true
                    }
                },
                "hybridPhoneProfile6": {
                    "introduced": "6.10.4",
                    "deleted": "7.0.0",
                    "deletionMessage": null,
                    "required": {
                        "currentValue": true
                    }
                },
                "hybridTabletProfile6": {
                    "introduced": "6.10.4",
                    "deleted": "7.0.0",
                    "deletionMessage": null,
                    "required": {
                        "currentValue": true
                    }
                }
            }
        }, internal.StructureType.ModelUnit);
        return NavigationDocument;
    }(projects_1.projects.ProjectDocument));
    navigation.NavigationDocument = NavigationDocument;
    /**
     * In version 7.2.0: added public
     */
    var NavigationProfile = /** @class */ (function (_super) {
        __extends(NavigationProfile, _super);
        function NavigationProfile(model, structureTypeName, id, isPartial, unit, container) {
            var _this = _super.call(this, model, structureTypeName, id, isPartial, unit, container) || this;
            /** @internal */
            _this.__name = new internal.PrimitiveProperty(NavigationProfile, _this, "name", "", internal.PrimitiveTypeEnum.String);
            /** @internal */
            _this.__kind = new internal.EnumProperty(NavigationProfile, _this, "kind", ProfileKind.Responsive, ProfileKind);
            /** @internal */
            _this.__enabled = new internal.PrimitiveProperty(NavigationProfile, _this, "enabled", false, internal.PrimitiveTypeEnum.Boolean);
            /** @internal */
            _this.__offlineEnabled = new internal.PrimitiveProperty(NavigationProfile, _this, "offlineEnabled", false, internal.PrimitiveTypeEnum.Boolean);
            /** @internal */
            _this.__homePage = new internal.PartProperty(NavigationProfile, _this, "homePage", null, true);
            /** @internal */
            _this.__roleBasedHomePages = new internal.PartListProperty(NavigationProfile, _this, "roleBasedHomePages", []);
            /** @internal */
            _this.__applicationTitle = new internal.PrimitiveProperty(NavigationProfile, _this, "applicationTitle", "", internal.PrimitiveTypeEnum.String);
            /** @internal */
            _this.__loginPageSettings = new internal.PartProperty(NavigationProfile, _this, "loginPageSettings", null, true);
            /** @internal */
            _this.__menuItemCollection = new internal.PartProperty(NavigationProfile, _this, "menuItemCollection", null, true);
            /** @internal */
            _this.__offlineEnabled6 = new internal.PrimitiveProperty(NavigationProfile, _this, "offlineEnabled6", false, internal.PrimitiveTypeEnum.Boolean);
            if (arguments.length < 4) {
                throw new Error("new NavigationProfile() cannot be invoked directly, please use 'model.navigation.createNavigationProfile()'");
            }
            return _this;
        }
        Object.defineProperty(NavigationProfile.prototype, "containerAsNavigationDocument", {
            get: function () { return _super.prototype.getContainerAs.call(this, NavigationDocument); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NavigationProfile.prototype, "name", {
            /**
             * In version 7.2.0: introduced
             */
            get: function () { return this.__name.get(); },
            set: function (newValue) { this.__name.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NavigationProfile.prototype, "kind", {
            /**
             * In version 7.2.0: introduced
             */
            get: function () { return this.__kind.get(); },
            set: function (newValue) { this.__kind.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NavigationProfile.prototype, "enabled", {
            /**
             * In version 7.2.0: deleted
             */
            get: function () { return this.__enabled.get(); },
            set: function (newValue) { this.__enabled.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NavigationProfile.prototype, "offlineEnabled", {
            /**
             * In version 7.2.0: deleted
             * In version 7.0.2: introduced
             */
            get: function () { return this.__offlineEnabled.get(); },
            set: function (newValue) { this.__offlineEnabled.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NavigationProfile.prototype, "homePage", {
            get: function () { return this.__homePage.get(); },
            set: function (newValue) { this.__homePage.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NavigationProfile.prototype, "roleBasedHomePages", {
            get: function () { return this.__roleBasedHomePages.get(); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NavigationProfile.prototype, "applicationTitle", {
            get: function () { return this.__applicationTitle.get(); },
            set: function (newValue) { this.__applicationTitle.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NavigationProfile.prototype, "loginPageSettings", {
            /**
             * In version 7.0.2: introduced
             */
            get: function () { return this.__loginPageSettings.get(); },
            set: function (newValue) { this.__loginPageSettings.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NavigationProfile.prototype, "menuItemCollection", {
            get: function () { return this.__menuItemCollection.get(); },
            set: function (newValue) { this.__menuItemCollection.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NavigationProfile.prototype, "offlineEnabled6", {
            /**
             * In version 7.0.0: deleted
             * In version 6.10.4: introduced
             */
            get: function () { return this.__offlineEnabled6.get(); },
            set: function (newValue) { this.__offlineEnabled6.set(newValue); },
            enumerable: true,
            configurable: true
        });
        /**
         * Creates and returns a new NavigationProfile instance in the SDK and on the server.
         * The new NavigationProfile will be automatically stored in the 'profiles' property
         * of the parent NavigationDocument element passed as argument.
         *
         * Warning! Can only be used on models with the following Mendix meta model versions:
         *  7.2.0 and higher
         */
        NavigationProfile.createIn = function (container) {
            internal.createInVersionCheck(container.model, NavigationProfile.structureTypeName, { start: "7.2.0" });
            return internal.instancehelpers.createElement(container, NavigationProfile, "profiles", true);
        };
        /**
         * Creates and returns a new NavigationProfile instance in the SDK and on the server.
         * The new NavigationProfile will be automatically stored in the 'desktopProfile' property
         * of the parent NavigationDocument element passed as argument.
         *
         * Warning! Can only be used on models with the following Mendix meta model versions:
         *  6.0.0 to 7.1.0
         */
        NavigationProfile.createInNavigationDocumentUnderDesktopProfile = function (container) {
            internal.createInVersionCheck(container.model, NavigationProfile.structureTypeName, { end: "7.1.0" });
            return internal.instancehelpers.createElement(container, NavigationProfile, "desktopProfile", false);
        };
        /**
         * Creates and returns a new NavigationProfile instance in the SDK and on the server.
         * The new NavigationProfile will be automatically stored in the 'hybridPhoneProfile' property
         * of the parent NavigationDocument element passed as argument.
         *
         * Warning! Can only be used on models with the following Mendix meta model versions:
         *  7.0.2 to 7.1.0
         */
        NavigationProfile.createInNavigationDocumentUnderHybridPhoneProfile = function (container) {
            internal.createInVersionCheck(container.model, NavigationProfile.structureTypeName, { start: "7.0.2", end: "7.1.0" });
            return internal.instancehelpers.createElement(container, NavigationProfile, "hybridPhoneProfile", false);
        };
        /**
         * Creates and returns a new NavigationProfile instance in the SDK and on the server.
         * The new NavigationProfile will be automatically stored in the 'hybridPhoneProfile6' property
         * of the parent NavigationDocument element passed as argument.
         *
         * Warning! Can only be used on models with the following Mendix meta model versions:
         *  6.10.4 to 6.10.4
         */
        NavigationProfile.createInNavigationDocumentUnderHybridPhoneProfile6 = function (container) {
            internal.createInVersionCheck(container.model, NavigationProfile.structureTypeName, { start: "6.10.4", end: "6.10.4" });
            return internal.instancehelpers.createElement(container, NavigationProfile, "hybridPhoneProfile6", false);
        };
        /**
         * Creates and returns a new NavigationProfile instance in the SDK and on the server.
         * The new NavigationProfile will be automatically stored in the 'hybridTabletProfile' property
         * of the parent NavigationDocument element passed as argument.
         *
         * Warning! Can only be used on models with the following Mendix meta model versions:
         *  7.0.2 to 7.1.0
         */
        NavigationProfile.createInNavigationDocumentUnderHybridTabletProfile = function (container) {
            internal.createInVersionCheck(container.model, NavigationProfile.structureTypeName, { start: "7.0.2", end: "7.1.0" });
            return internal.instancehelpers.createElement(container, NavigationProfile, "hybridTabletProfile", false);
        };
        /**
         * Creates and returns a new NavigationProfile instance in the SDK and on the server.
         * The new NavigationProfile will be automatically stored in the 'hybridTabletProfile6' property
         * of the parent NavigationDocument element passed as argument.
         *
         * Warning! Can only be used on models with the following Mendix meta model versions:
         *  6.10.4 to 6.10.4
         */
        NavigationProfile.createInNavigationDocumentUnderHybridTabletProfile6 = function (container) {
            internal.createInVersionCheck(container.model, NavigationProfile.structureTypeName, { start: "6.10.4", end: "6.10.4" });
            return internal.instancehelpers.createElement(container, NavigationProfile, "hybridTabletProfile6", false);
        };
        /**
         * Creates and returns a new NavigationProfile instance in the SDK and on the server.
         * The new NavigationProfile will be automatically stored in the 'offlinePhoneProfile' property
         * of the parent NavigationDocument element passed as argument.
         *
         * Warning! Can only be used on models with the following Mendix meta model versions:
         *  6.0.0 to 7.0.1
         */
        NavigationProfile.createInNavigationDocumentUnderOfflinePhoneProfile = function (container) {
            internal.createInVersionCheck(container.model, NavigationProfile.structureTypeName, { end: "7.0.1" });
            return internal.instancehelpers.createElement(container, NavigationProfile, "offlinePhoneProfile", false);
        };
        /**
         * Creates and returns a new NavigationProfile instance in the SDK and on the server.
         * The new NavigationProfile will be automatically stored in the 'phoneProfile' property
         * of the parent NavigationDocument element passed as argument.
         *
         * Warning! Can only be used on models with the following Mendix meta model versions:
         *  6.0.0 to 7.1.0
         */
        NavigationProfile.createInNavigationDocumentUnderPhoneProfile = function (container) {
            internal.createInVersionCheck(container.model, NavigationProfile.structureTypeName, { end: "7.1.0" });
            return internal.instancehelpers.createElement(container, NavigationProfile, "phoneProfile", false);
        };
        /**
         * Creates and returns a new NavigationProfile instance in the SDK and on the server.
         * The new NavigationProfile will be automatically stored in the 'profiles' property
         * of the parent NavigationDocument element passed as argument.
         *
         * Warning! Can only be used on models with the following Mendix meta model versions:
         *  7.2.0 and higher
         */
        NavigationProfile.createInNavigationDocumentUnderProfiles = function (container) {
            internal.createInVersionCheck(container.model, NavigationProfile.structureTypeName, { start: "7.2.0" });
            return internal.instancehelpers.createElement(container, NavigationProfile, "profiles", true);
        };
        /**
         * Creates and returns a new NavigationProfile instance in the SDK and on the server.
         * The new NavigationProfile will be automatically stored in the 'tabletProfile' property
         * of the parent NavigationDocument element passed as argument.
         *
         * Warning! Can only be used on models with the following Mendix meta model versions:
         *  6.0.0 to 7.1.0
         */
        NavigationProfile.createInNavigationDocumentUnderTabletProfile = function (container) {
            internal.createInVersionCheck(container.model, NavigationProfile.structureTypeName, { end: "7.1.0" });
            return internal.instancehelpers.createElement(container, NavigationProfile, "tabletProfile", false);
        };
        /**
         * Creates and returns a new NavigationProfile instance in the SDK and on the server.
         * Expects one argument: the IModel object the instance will "live on".
         * After creation, assign or add this instance to a property that accepts this kind of objects.
         */
        NavigationProfile.create = function (model) {
            return internal.instancehelpers.createElement(model, NavigationProfile);
        };
        /** @internal */
        NavigationProfile.prototype._isByNameReferrable = function () { return true; };
        Object.defineProperty(NavigationProfile.prototype, "qualifiedName", {
            get: function () {
                return this._getQualifiedName();
            },
            enumerable: true,
            configurable: true
        });
        /** @internal */
        NavigationProfile.prototype._initializeDefaultProperties = function () {
            var _this = this;
            _super.prototype._initializeDefaultProperties.call(this);
            (function () {
                if (internal.isAtLeast("6.9.0", _this.model)) {
                    _this.applicationTitle = "Mendix";
                    return;
                }
                _this.applicationTitle = "Mendix 5";
            })();
            if (this.__enabled.isAvailable) {
                (function () {
                    if (internal.isAtLeast("6.9.0", _this.model)) {
                        _this.enabled = false;
                        return;
                    }
                    _this.enabled = true;
                })();
            }
            this.homePage = HomePage.create(this.model);
            if (this.__kind.isAvailable) {
                this.kind = ProfileKind.Responsive;
            }
            if (this.__loginPageSettings.isAvailable) {
                this.loginPageSettings = pages_1.pages.PageSettings.create(this.model);
            }
            this.menuItemCollection = menus_1.menus.MenuItemCollection.create(this.model);
            if (this.__offlineEnabled.isAvailable) {
                this.offlineEnabled = false;
            }
            if (this.__offlineEnabled6.isAvailable) {
                this.offlineEnabled6 = false;
            }
        };
        NavigationProfile.structureTypeName = "Navigation$NavigationProfile";
        NavigationProfile.versionInfo = new exports.StructureVersionInfo({
            "properties": {
                "name": {
                    "introduced": "7.2.0",
                    "public": {
                        "currentValue": true
                    }
                },
                "kind": {
                    "introduced": "7.2.0"
                },
                "enabled": {
                    "deleted": "7.2.0",
                    "deletionMessage": null
                },
                "offlineEnabled": {
                    "introduced": "7.0.2",
                    "deleted": "7.2.0",
                    "deletionMessage": null
                },
                "homePage": {
                    "required": {
                        "currentValue": true
                    }
                },
                "applicationTitle": {},
                "loginPageSettings": {
                    "introduced": "7.0.2",
                    "required": {
                        "currentValue": true
                    }
                },
                "menuItemCollection": {
                    "required": {
                        "currentValue": true
                    }
                },
                "offlineEnabled6": {
                    "introduced": "6.10.4",
                    "deleted": "7.0.0",
                    "deletionMessage": null
                }
            },
            "public": {
                "currentValue": true,
                "changedIn": [
                    "7.2.0"
                ]
            }
        }, internal.StructureType.Element);
        return NavigationProfile;
    }(internal.Element));
    navigation.NavigationProfile = NavigationProfile;
    var RoleBasedHomePage = /** @class */ (function (_super) {
        __extends(RoleBasedHomePage, _super);
        function RoleBasedHomePage(model, structureTypeName, id, isPartial, unit, container) {
            var _this = _super.call(this, model, structureTypeName, id, isPartial, unit, container) || this;
            /** @internal */
            _this.__userRole = new internal.ByNameReferenceProperty(RoleBasedHomePage, _this, "userRole", null, "Security$UserRole");
            if (arguments.length < 4) {
                throw new Error("new RoleBasedHomePage() cannot be invoked directly, please use 'model.navigation.createRoleBasedHomePage()'");
            }
            return _this;
        }
        Object.defineProperty(RoleBasedHomePage.prototype, "containerAsNavigationProfile", {
            get: function () { return _super.prototype.getContainerAs.call(this, NavigationProfile); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(RoleBasedHomePage.prototype, "userRole", {
            get: function () { return this.__userRole.get(); },
            set: function (newValue) { this.__userRole.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(RoleBasedHomePage.prototype, "userRoleQualifiedName", {
            get: function () { return this.__userRole.qualifiedName(); },
            enumerable: true,
            configurable: true
        });
        /**
         * Creates and returns a new RoleBasedHomePage instance in the SDK and on the server.
         * The new RoleBasedHomePage will be automatically stored in the 'roleBasedHomePages' property
         * of the parent NavigationProfile element passed as argument.
         */
        RoleBasedHomePage.createIn = function (container) {
            return internal.instancehelpers.createElement(container, RoleBasedHomePage, "roleBasedHomePages", true);
        };
        /**
         * Creates and returns a new RoleBasedHomePage instance in the SDK and on the server.
         * Expects one argument: the IModel object the instance will "live on".
         * After creation, assign or add this instance to a property that accepts this kind of objects.
         */
        RoleBasedHomePage.create = function (model) {
            return internal.instancehelpers.createElement(model, RoleBasedHomePage);
        };
        /** @internal */
        RoleBasedHomePage.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
        };
        RoleBasedHomePage.structureTypeName = "Navigation$RoleBasedHomePage";
        RoleBasedHomePage.versionInfo = new exports.StructureVersionInfo({}, internal.StructureType.Element);
        return RoleBasedHomePage;
    }(HomePageBase));
    navigation.RoleBasedHomePage = RoleBasedHomePage;
})(navigation = exports.navigation || (exports.navigation = {}));
var menus_1 = require("./menus");
var pages_1 = require("./pages");
//# sourceMappingURL=navigation.js.map