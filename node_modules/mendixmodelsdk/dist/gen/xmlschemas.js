"use strict";
/* tslint:disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var internal = require("../sdk/internal");
exports.StructureVersionInfo = internal.StructureVersionInfo;
var projects_1 = require("./projects");
var mappings_1 = require("./mappings");
var xmlschemas;
(function (xmlschemas) {
    var XmlPrimitiveType = /** @class */ (function (_super) {
        __extends(XmlPrimitiveType, _super);
        function XmlPrimitiveType() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.qualifiedTsTypeName = "xmlschemas.XmlPrimitiveType";
            return _this;
        }
        XmlPrimitiveType.Unknown = new XmlPrimitiveType("Unknown", {});
        XmlPrimitiveType.Boolean = new XmlPrimitiveType("Boolean", {});
        XmlPrimitiveType.Date = new XmlPrimitiveType("Date", {});
        XmlPrimitiveType.Time = new XmlPrimitiveType("Time", {});
        XmlPrimitiveType.DateTime = new XmlPrimitiveType("DateTime", {});
        XmlPrimitiveType.Decimal = new XmlPrimitiveType("Decimal", {});
        XmlPrimitiveType.Float = new XmlPrimitiveType("Float", {});
        XmlPrimitiveType.Integer = new XmlPrimitiveType("Integer", {});
        XmlPrimitiveType.Long = new XmlPrimitiveType("Long", {
            "introduced": "6.2.0"
        });
        XmlPrimitiveType.Binary = new XmlPrimitiveType("Binary", {});
        XmlPrimitiveType.String = new XmlPrimitiveType("String", {});
        XmlPrimitiveType.AnyType = new XmlPrimitiveType("AnyType", {});
        return XmlPrimitiveType;
    }(internal.AbstractEnum));
    xmlschemas.XmlPrimitiveType = XmlPrimitiveType;
    var MxSchema = /** @class */ (function (_super) {
        __extends(MxSchema, _super);
        function MxSchema(model, structureTypeName, id, isPartial, container) {
            return _super.call(this, model, structureTypeName, id, isPartial, container) || this;
        }
        Object.defineProperty(MxSchema.prototype, "containerAsFolderBase", {
            get: function () { return _super.prototype.getContainerAs.call(this, projects_1.projects.FolderBase); },
            enumerable: true,
            configurable: true
        });
        /** @internal */
        MxSchema.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
        };
        MxSchema.structureTypeName = "XmlSchemas$MxSchema";
        MxSchema.versionInfo = new exports.StructureVersionInfo({}, internal.StructureType.ModelUnit);
        return MxSchema;
    }(projects_1.projects.Document));
    xmlschemas.MxSchema = MxSchema;
    /**
     * In version 6.6.0: introduced
     */
    var XmlElement = /** @class */ (function (_super) {
        __extends(XmlElement, _super);
        function XmlElement(model, structureTypeName, id, isPartial, unit, container) {
            var _this = _super.call(this, model, structureTypeName, id, isPartial, unit, container) || this;
            if (arguments.length < 4) {
                throw new Error("new XmlElement() cannot be invoked directly, please use 'model.xmlschemas.createXmlElement()'");
            }
            return _this;
        }
        Object.defineProperty(XmlElement.prototype, "containerAsJsonStructure", {
            get: function () { return _super.prototype.getContainerAs.call(this, jsonstructures_1.jsonstructures.JsonStructure); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(XmlElement.prototype, "containerAsElement", {
            get: function () { return _super.prototype.getContainerAs.call(this, mappings_1.mappings.Element); },
            enumerable: true,
            configurable: true
        });
        /**
         * Creates and returns a new XmlElement instance in the SDK and on the server.
         * The new XmlElement will be automatically stored in the 'elements' property
         * of the parent jsonstructures.JsonStructure element passed as argument.
         *
         * Warning! Can only be used on models with the following Mendix meta model versions:
         *  6.6.0 and higher
         */
        XmlElement.createInJsonStructureUnderElements = function (container) {
            internal.createInVersionCheck(container.model, XmlElement.structureTypeName, { start: "6.6.0" });
            return internal.instancehelpers.createElement(container, XmlElement, "elements", true);
        };
        /**
         * Creates and returns a new XmlElement instance in the SDK and on the server.
         * The new XmlElement will be automatically stored in the 'children' property
         * of the parent mappings.Element element passed as argument.
         *
         * Warning! Can only be used on models with the following Mendix meta model versions:
         *  6.6.0 and higher
         */
        XmlElement.createInElementUnderChildren = function (container) {
            internal.createInVersionCheck(container.model, XmlElement.structureTypeName, { start: "6.6.0" });
            return internal.instancehelpers.createElement(container, XmlElement, "children", true);
        };
        /**
         * Creates and returns a new XmlElement instance in the SDK and on the server.
         * Expects one argument: the IModel object the instance will "live on".
         * After creation, assign or add this instance to a property that accepts this kind of objects.
         */
        XmlElement.create = function (model) {
            return internal.instancehelpers.createElement(model, XmlElement);
        };
        /** @internal */
        XmlElement.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
        };
        XmlElement.structureTypeName = "XmlSchemas$XmlElement";
        XmlElement.versionInfo = new exports.StructureVersionInfo({
            "introduced": "6.6.0"
        }, internal.StructureType.Element);
        return XmlElement;
    }(mappings_1.mappings.Element));
    xmlschemas.XmlElement = XmlElement;
    /**
     * See: {@link https://docs.mendix.com/refguide7/xml-schemas relevant section in reference guide}
     */
    var XmlSchema = /** @class */ (function (_super) {
        __extends(XmlSchema, _super);
        function XmlSchema(model, structureTypeName, id, isPartial, container) {
            var _this = _super.call(this, model, structureTypeName, id, isPartial, container) || this;
            /** @internal */
            _this.__entries = new internal.PartListProperty(XmlSchema, _this, "entries", []);
            /** @internal */
            _this.__filePath = new internal.PrimitiveProperty(XmlSchema, _this, "filePath", "", internal.PrimitiveTypeEnum.String);
            _this._containmentName = "documents";
            return _this;
        }
        Object.defineProperty(XmlSchema.prototype, "containerAsFolderBase", {
            get: function () { return _super.prototype.getContainerAs.call(this, projects_1.projects.FolderBase); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(XmlSchema.prototype, "entries", {
            get: function () { return this.__entries.get(); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(XmlSchema.prototype, "filePath", {
            get: function () { return this.__filePath.get(); },
            set: function (newValue) { this.__filePath.set(newValue); },
            enumerable: true,
            configurable: true
        });
        /**
         * Creates a new XmlSchema unit in the SDK and on the server.
         * Expects one argument, the projects.IFolderBase in which this unit is contained.
         */
        XmlSchema.createIn = function (container) {
            return internal.instancehelpers.createUnit(container, XmlSchema);
        };
        /** @internal */
        XmlSchema.prototype._isByNameReferrable = function () { return true; };
        /** @internal */
        XmlSchema.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
        };
        XmlSchema.structureTypeName = "XmlSchemas$XmlSchema";
        XmlSchema.versionInfo = new exports.StructureVersionInfo({}, internal.StructureType.ModelUnit);
        return XmlSchema;
    }(MxSchema));
    xmlschemas.XmlSchema = XmlSchema;
    var XmlSchemaEntry = /** @class */ (function (_super) {
        __extends(XmlSchemaEntry, _super);
        function XmlSchemaEntry(model, structureTypeName, id, isPartial, unit, container) {
            var _this = _super.call(this, model, structureTypeName, id, isPartial, unit, container) || this;
            /** @internal */
            _this.__targetNamespace = new internal.PrimitiveProperty(XmlSchemaEntry, _this, "targetNamespace", "", internal.PrimitiveTypeEnum.String);
            /** @internal */
            _this.__location = new internal.PrimitiveProperty(XmlSchemaEntry, _this, "location", "", internal.PrimitiveTypeEnum.String);
            /** @internal */
            _this.__contents = new internal.PrimitiveProperty(XmlSchemaEntry, _this, "contents", "", internal.PrimitiveTypeEnum.String);
            /** @internal */
            _this.__localizedLocationFormat = new internal.PrimitiveProperty(XmlSchemaEntry, _this, "localizedLocationFormat", "", internal.PrimitiveTypeEnum.String);
            /** @internal */
            _this.__localizedContentsFormat = new internal.PrimitiveProperty(XmlSchemaEntry, _this, "localizedContentsFormat", "", internal.PrimitiveTypeEnum.String);
            if (arguments.length < 4) {
                throw new Error("new XmlSchemaEntry() cannot be invoked directly, please use 'model.xmlschemas.createXmlSchemaEntry()'");
            }
            return _this;
        }
        Object.defineProperty(XmlSchemaEntry.prototype, "containerAsWsdlDescription", {
            get: function () { return _super.prototype.getContainerAs.call(this, webservices_1.webservices.WsdlDescription); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(XmlSchemaEntry.prototype, "containerAsXmlSchema", {
            get: function () { return _super.prototype.getContainerAs.call(this, XmlSchema); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(XmlSchemaEntry.prototype, "targetNamespace", {
            get: function () { return this.__targetNamespace.get(); },
            set: function (newValue) { this.__targetNamespace.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(XmlSchemaEntry.prototype, "location", {
            get: function () { return this.__location.get(); },
            set: function (newValue) { this.__location.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(XmlSchemaEntry.prototype, "contents", {
            get: function () { return this.__contents.get(); },
            set: function (newValue) { this.__contents.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(XmlSchemaEntry.prototype, "localizedLocationFormat", {
            get: function () { return this.__localizedLocationFormat.get(); },
            set: function (newValue) { this.__localizedLocationFormat.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(XmlSchemaEntry.prototype, "localizedContentsFormat", {
            get: function () { return this.__localizedContentsFormat.get(); },
            set: function (newValue) { this.__localizedContentsFormat.set(newValue); },
            enumerable: true,
            configurable: true
        });
        /**
         * Creates and returns a new XmlSchemaEntry instance in the SDK and on the server.
         * The new XmlSchemaEntry will be automatically stored in the 'schemaEntries' property
         * of the parent webservices.WsdlDescription element passed as argument.
         */
        XmlSchemaEntry.createInWsdlDescriptionUnderSchemaEntries = function (container) {
            return internal.instancehelpers.createElement(container, XmlSchemaEntry, "schemaEntries", true);
        };
        /**
         * Creates and returns a new XmlSchemaEntry instance in the SDK and on the server.
         * The new XmlSchemaEntry will be automatically stored in the 'entries' property
         * of the parent XmlSchema element passed as argument.
         */
        XmlSchemaEntry.createInXmlSchemaUnderEntries = function (container) {
            return internal.instancehelpers.createElement(container, XmlSchemaEntry, "entries", true);
        };
        /**
         * Creates and returns a new XmlSchemaEntry instance in the SDK and on the server.
         * Expects one argument: the IModel object the instance will "live on".
         * After creation, assign or add this instance to a property that accepts this kind of objects.
         */
        XmlSchemaEntry.create = function (model) {
            return internal.instancehelpers.createElement(model, XmlSchemaEntry);
        };
        /** @internal */
        XmlSchemaEntry.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
        };
        XmlSchemaEntry.structureTypeName = "XmlSchemas$XmlSchemaEntry";
        XmlSchemaEntry.versionInfo = new exports.StructureVersionInfo({}, internal.StructureType.Element);
        return XmlSchemaEntry;
    }(internal.Element));
    xmlschemas.XmlSchemaEntry = XmlSchemaEntry;
})(xmlschemas = exports.xmlschemas || (exports.xmlschemas = {}));
var jsonstructures_1 = require("./jsonstructures");
var webservices_1 = require("./webservices");
//# sourceMappingURL=xmlschemas.js.map