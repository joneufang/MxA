"use strict";
/* tslint:disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var internal = require("../sdk/internal");
exports.StructureVersionInfo = internal.StructureVersionInfo;
var projects_1 = require("./projects");
var webservices;
(function (webservices) {
    var AppServiceState = /** @class */ (function (_super) {
        __extends(AppServiceState, _super);
        function AppServiceState() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.qualifiedTsTypeName = "webservices.AppServiceState";
            return _this;
        }
        AppServiceState.Draft = new AppServiceState("Draft", {});
        AppServiceState.Consumable = new AppServiceState("Consumable", {});
        AppServiceState.Deprecated = new AppServiceState("Deprecated", {});
        return AppServiceState;
    }(internal.AbstractEnum));
    webservices.AppServiceState = AppServiceState;
    var HeaderAuthentication = /** @class */ (function (_super) {
        __extends(HeaderAuthentication, _super);
        function HeaderAuthentication() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.qualifiedTsTypeName = "webservices.HeaderAuthentication";
            return _this;
        }
        HeaderAuthentication.None = new HeaderAuthentication("None", {});
        HeaderAuthentication.UsernamePassword = new HeaderAuthentication("UsernamePassword", {});
        HeaderAuthentication.Custom = new HeaderAuthentication("Custom", {});
        return HeaderAuthentication;
    }(internal.AbstractEnum));
    webservices.HeaderAuthentication = HeaderAuthentication;
    var SoapVersion = /** @class */ (function (_super) {
        __extends(SoapVersion, _super);
        function SoapVersion() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.qualifiedTsTypeName = "webservices.SoapVersion";
            return _this;
        }
        SoapVersion.Soap11 = new SoapVersion("Soap11", {});
        SoapVersion.Soap12 = new SoapVersion("Soap12", {});
        return SoapVersion;
    }(internal.AbstractEnum));
    webservices.SoapVersion = SoapVersion;
    /**
     * Interfaces and instance classes for types from the Mendix sub meta model `WebServices`.
     */
    var DataMember = /** @class */ (function (_super) {
        __extends(DataMember, _super);
        function DataMember(model, structureTypeName, id, isPartial, unit, container) {
            var _this = _super.call(this, model, structureTypeName, id, isPartial, unit, container) || this;
            /** @internal */
            _this.__isLockedByContract = new internal.PrimitiveProperty(DataMember, _this, "isLockedByContract", false, internal.PrimitiveTypeEnum.Boolean);
            /** @internal */
            _this.__exposedName = new internal.PrimitiveProperty(DataMember, _this, "exposedName", "", internal.PrimitiveTypeEnum.String);
            /** @internal */
            _this.__isOptionalByContract = new internal.PrimitiveProperty(DataMember, _this, "isOptionalByContract", false, internal.PrimitiveTypeEnum.Boolean);
            /** @internal */
            _this.__isOptional = new internal.PrimitiveProperty(DataMember, _this, "isOptional", false, internal.PrimitiveTypeEnum.Boolean);
            /** @internal */
            _this.__isNillableByContract = new internal.PrimitiveProperty(DataMember, _this, "isNillableByContract", false, internal.PrimitiveTypeEnum.Boolean);
            /** @internal */
            _this.__isNillable = new internal.PrimitiveProperty(DataMember, _this, "isNillable", false, internal.PrimitiveTypeEnum.Boolean);
            /** @internal */
            _this.__isKey = new internal.PrimitiveProperty(DataMember, _this, "isKey", false, internal.PrimitiveTypeEnum.Boolean);
            if (arguments.length < 4) {
                throw new Error("new DataMember() cannot be invoked directly, please use 'model.webservices.createDataMember()'");
            }
            return _this;
        }
        Object.defineProperty(DataMember.prototype, "containerAsDataEntityBase", {
            get: function () { return _super.prototype.getContainerAs.call(this, DataEntityBase); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataMember.prototype, "containerAsPublishedParameter", {
            get: function () { return _super.prototype.getContainerAs.call(this, PublishedParameter); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataMember.prototype, "containerAsPublishedResource", {
            get: function () { return _super.prototype.getContainerAs.call(this, PublishedResource); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataMember.prototype, "isLockedByContract", {
            get: function () { return this.__isLockedByContract.get(); },
            set: function (newValue) { this.__isLockedByContract.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataMember.prototype, "exposedName", {
            get: function () { return this.__exposedName.get(); },
            set: function (newValue) { this.__exposedName.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataMember.prototype, "isOptionalByContract", {
            get: function () { return this.__isOptionalByContract.get(); },
            set: function (newValue) { this.__isOptionalByContract.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataMember.prototype, "isOptional", {
            get: function () { return this.__isOptional.get(); },
            set: function (newValue) { this.__isOptional.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataMember.prototype, "isNillableByContract", {
            get: function () { return this.__isNillableByContract.get(); },
            set: function (newValue) { this.__isNillableByContract.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataMember.prototype, "isNillable", {
            get: function () { return this.__isNillable.get(); },
            set: function (newValue) { this.__isNillable.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataMember.prototype, "isKey", {
            get: function () { return this.__isKey.get(); },
            set: function (newValue) { this.__isKey.set(newValue); },
            enumerable: true,
            configurable: true
        });
        /** @internal */
        DataMember.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
        };
        DataMember.structureTypeName = "WebServices$DataMember";
        DataMember.versionInfo = new exports.StructureVersionInfo({}, internal.StructureType.Element);
        return DataMember;
    }(internal.Element));
    webservices.DataMember = DataMember;
    var DataEntityBase = /** @class */ (function (_super) {
        __extends(DataEntityBase, _super);
        function DataEntityBase(model, structureTypeName, id, isPartial, unit, container) {
            var _this = _super.call(this, model, structureTypeName, id, isPartial, unit, container) || this;
            /** @internal */
            _this.__childMembers = new internal.PartListProperty(DataEntityBase, _this, "childMembers", []);
            /** @internal */
            _this.__entity = new internal.ByNameReferenceProperty(DataEntityBase, _this, "entity", null, "DomainModels$Entity");
            /** @internal */
            _this.__exposedItemName = new internal.PrimitiveProperty(DataEntityBase, _this, "exposedItemName", "", internal.PrimitiveTypeEnum.String);
            if (arguments.length < 4) {
                throw new Error("new DataEntityBase() cannot be invoked directly, please use 'model.webservices.createDataEntityBase()'");
            }
            return _this;
        }
        Object.defineProperty(DataEntityBase.prototype, "containerAsDataEntityBase", {
            get: function () { return _super.prototype.getContainerAs.call(this, DataEntityBase); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataEntityBase.prototype, "containerAsPublishedParameter", {
            get: function () { return _super.prototype.getContainerAs.call(this, PublishedParameter); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataEntityBase.prototype, "containerAsPublishedResource", {
            get: function () { return _super.prototype.getContainerAs.call(this, PublishedResource); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataEntityBase.prototype, "childMembers", {
            get: function () { return this.__childMembers.get(); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataEntityBase.prototype, "entity", {
            get: function () { return this.__entity.get(); },
            set: function (newValue) { this.__entity.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataEntityBase.prototype, "entityQualifiedName", {
            get: function () { return this.__entity.qualifiedName(); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataEntityBase.prototype, "exposedItemName", {
            get: function () { return this.__exposedItemName.get(); },
            set: function (newValue) { this.__exposedItemName.set(newValue); },
            enumerable: true,
            configurable: true
        });
        /** @internal */
        DataEntityBase.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
        };
        DataEntityBase.structureTypeName = "WebServices$DataEntityBase";
        DataEntityBase.versionInfo = new exports.StructureVersionInfo({}, internal.StructureType.Element);
        return DataEntityBase;
    }(DataMember));
    webservices.DataEntityBase = DataEntityBase;
    var DataAssociation = /** @class */ (function (_super) {
        __extends(DataAssociation, _super);
        function DataAssociation(model, structureTypeName, id, isPartial, unit, container) {
            var _this = _super.call(this, model, structureTypeName, id, isPartial, unit, container) || this;
            /** @internal */
            _this.__associationByContract = new internal.PartProperty(DataAssociation, _this, "associationByContract", null, false);
            /** @internal */
            _this.__association = new internal.ByNameReferenceProperty(DataAssociation, _this, "association", null, "DomainModels$AssociationBase");
            if (arguments.length < 4) {
                throw new Error("new DataAssociation() cannot be invoked directly, please use 'model.webservices.createDataAssociation()'");
            }
            return _this;
        }
        Object.defineProperty(DataAssociation.prototype, "containerAsDataEntityBase", {
            get: function () { return _super.prototype.getContainerAs.call(this, DataEntityBase); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataAssociation.prototype, "associationByContract", {
            get: function () { return this.__associationByContract.get(); },
            set: function (newValue) { this.__associationByContract.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataAssociation.prototype, "association", {
            get: function () { return this.__association.get(); },
            set: function (newValue) { this.__association.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataAssociation.prototype, "associationQualifiedName", {
            get: function () { return this.__association.qualifiedName(); },
            enumerable: true,
            configurable: true
        });
        /**
         * Creates and returns a new DataAssociation instance in the SDK and on the server.
         * The new DataAssociation will be automatically stored in the 'childMembers' property
         * of the parent DataEntityBase element passed as argument.
         */
        DataAssociation.createIn = function (container) {
            return internal.instancehelpers.createElement(container, DataAssociation, "childMembers", true);
        };
        /**
         * Creates and returns a new DataAssociation instance in the SDK and on the server.
         * Expects one argument: the IModel object the instance will "live on".
         * After creation, assign or add this instance to a property that accepts this kind of objects.
         */
        DataAssociation.create = function (model) {
            return internal.instancehelpers.createElement(model, DataAssociation);
        };
        /** @internal */
        DataAssociation.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
        };
        DataAssociation.structureTypeName = "WebServices$DataAssociation";
        DataAssociation.versionInfo = new exports.StructureVersionInfo({}, internal.StructureType.Element);
        return DataAssociation;
    }(DataEntityBase));
    webservices.DataAssociation = DataAssociation;
    var DataAttribute = /** @class */ (function (_super) {
        __extends(DataAttribute, _super);
        function DataAttribute(model, structureTypeName, id, isPartial, unit, container) {
            var _this = _super.call(this, model, structureTypeName, id, isPartial, unit, container) || this;
            /** @internal */
            _this.__attributeByContract = new internal.PartProperty(DataAttribute, _this, "attributeByContract", null, false);
            /** @internal */
            _this.__attribute = new internal.ByNameReferenceProperty(DataAttribute, _this, "attribute", null, "DomainModels$Attribute");
            if (arguments.length < 4) {
                throw new Error("new DataAttribute() cannot be invoked directly, please use 'model.webservices.createDataAttribute()'");
            }
            return _this;
        }
        Object.defineProperty(DataAttribute.prototype, "containerAsDataEntityBase", {
            get: function () { return _super.prototype.getContainerAs.call(this, DataEntityBase); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataAttribute.prototype, "attributeByContract", {
            get: function () { return this.__attributeByContract.get(); },
            set: function (newValue) { this.__attributeByContract.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataAttribute.prototype, "attribute", {
            get: function () { return this.__attribute.get(); },
            set: function (newValue) { this.__attribute.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataAttribute.prototype, "attributeQualifiedName", {
            get: function () { return this.__attribute.qualifiedName(); },
            enumerable: true,
            configurable: true
        });
        /**
         * Creates and returns a new DataAttribute instance in the SDK and on the server.
         * The new DataAttribute will be automatically stored in the 'childMembers' property
         * of the parent DataEntityBase element passed as argument.
         */
        DataAttribute.createIn = function (container) {
            return internal.instancehelpers.createElement(container, DataAttribute, "childMembers", true);
        };
        /**
         * Creates and returns a new DataAttribute instance in the SDK and on the server.
         * Expects one argument: the IModel object the instance will "live on".
         * After creation, assign or add this instance to a property that accepts this kind of objects.
         */
        DataAttribute.create = function (model) {
            return internal.instancehelpers.createElement(model, DataAttribute);
        };
        /** @internal */
        DataAttribute.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
        };
        DataAttribute.structureTypeName = "WebServices$DataAttribute";
        DataAttribute.versionInfo = new exports.StructureVersionInfo({}, internal.StructureType.Element);
        return DataAttribute;
    }(DataMember));
    webservices.DataAttribute = DataAttribute;
    var DataEntity = /** @class */ (function (_super) {
        __extends(DataEntity, _super);
        function DataEntity(model, structureTypeName, id, isPartial, unit, container) {
            var _this = _super.call(this, model, structureTypeName, id, isPartial, unit, container) || this;
            if (arguments.length < 4) {
                throw new Error("new DataEntity() cannot be invoked directly, please use 'model.webservices.createDataEntity()'");
            }
            return _this;
        }
        Object.defineProperty(DataEntity.prototype, "containerAsDataEntityBase", {
            get: function () { return _super.prototype.getContainerAs.call(this, DataEntityBase); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataEntity.prototype, "containerAsPublishedParameter", {
            get: function () { return _super.prototype.getContainerAs.call(this, PublishedParameter); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataEntity.prototype, "containerAsPublishedResource", {
            get: function () { return _super.prototype.getContainerAs.call(this, PublishedResource); },
            enumerable: true,
            configurable: true
        });
        /**
         * Creates and returns a new DataEntity instance in the SDK and on the server.
         * The new DataEntity will be automatically stored in the 'childMembers' property
         * of the parent DataEntityBase element passed as argument.
         */
        DataEntity.createInDataEntityBaseUnderChildMembers = function (container) {
            return internal.instancehelpers.createElement(container, DataEntity, "childMembers", true);
        };
        /**
         * Creates and returns a new DataEntity instance in the SDK and on the server.
         * The new DataEntity will be automatically stored in the 'dataEntity' property
         * of the parent PublishedParameter element passed as argument.
         */
        DataEntity.createInPublishedParameterUnderDataEntity = function (container) {
            return internal.instancehelpers.createElement(container, DataEntity, "dataEntity", false);
        };
        /**
         * Creates and returns a new DataEntity instance in the SDK and on the server.
         * The new DataEntity will be automatically stored in the 'dataEntity' property
         * of the parent PublishedResource element passed as argument.
         */
        DataEntity.createInPublishedResourceUnderDataEntity = function (container) {
            return internal.instancehelpers.createElement(container, DataEntity, "dataEntity", false);
        };
        /**
         * Creates and returns a new DataEntity instance in the SDK and on the server.
         * Expects one argument: the IModel object the instance will "live on".
         * After creation, assign or add this instance to a property that accepts this kind of objects.
         */
        DataEntity.create = function (model) {
            return internal.instancehelpers.createElement(model, DataEntity);
        };
        /** @internal */
        DataEntity.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
        };
        DataEntity.structureTypeName = "WebServices$DataEntity";
        DataEntity.versionInfo = new exports.StructureVersionInfo({}, internal.StructureType.Element);
        return DataEntity;
    }(DataEntityBase));
    webservices.DataEntity = DataEntity;
    /**
     * See: {@link https://docs.mendix.com/refguide7/consumed-web-services relevant section in reference guide}
     */
    var ImportedWebService = /** @class */ (function (_super) {
        __extends(ImportedWebService, _super);
        function ImportedWebService(model, structureTypeName, id, isPartial, container) {
            var _this = _super.call(this, model, structureTypeName, id, isPartial, container) || this;
            /** @internal */
            _this.__wsdlDescription = new internal.PartProperty(ImportedWebService, _this, "wsdlDescription", null, false);
            /** @internal */
            _this.__wsdlUrl = new internal.PrimitiveProperty(ImportedWebService, _this, "wsdlUrl", "", internal.PrimitiveTypeEnum.String);
            /** @internal */
            _this.__useMtom = new internal.PrimitiveProperty(ImportedWebService, _this, "useMtom", false, internal.PrimitiveTypeEnum.Boolean);
            _this._containmentName = "documents";
            return _this;
        }
        Object.defineProperty(ImportedWebService.prototype, "containerAsFolderBase", {
            get: function () { return _super.prototype.getContainerAs.call(this, projects_1.projects.FolderBase); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ImportedWebService.prototype, "wsdlDescription", {
            get: function () { return this.__wsdlDescription.get(); },
            set: function (newValue) { this.__wsdlDescription.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ImportedWebService.prototype, "wsdlUrl", {
            get: function () { return this.__wsdlUrl.get(); },
            set: function (newValue) { this.__wsdlUrl.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ImportedWebService.prototype, "useMtom", {
            /**
             * In version 6.4.1: introduced
             */
            get: function () { return this.__useMtom.get(); },
            set: function (newValue) { this.__useMtom.set(newValue); },
            enumerable: true,
            configurable: true
        });
        /**
         * Creates a new ImportedWebService unit in the SDK and on the server.
         * Expects one argument, the projects.IFolderBase in which this unit is contained.
         */
        ImportedWebService.createIn = function (container) {
            return internal.instancehelpers.createUnit(container, ImportedWebService);
        };
        /** @internal */
        ImportedWebService.prototype._isByNameReferrable = function () { return true; };
        /** @internal */
        ImportedWebService.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
            if (this.__useMtom.isAvailable) {
                this.useMtom = true;
            }
        };
        ImportedWebService.structureTypeName = "WebServices$ImportedWebService";
        ImportedWebService.versionInfo = new exports.StructureVersionInfo({
            "properties": {
                "useMtom": {
                    "introduced": "6.4.1"
                }
            }
        }, internal.StructureType.ModelUnit);
        return ImportedWebService;
    }(projects_1.projects.Document));
    webservices.ImportedWebService = ImportedWebService;
    var OperationInfo = /** @class */ (function (_super) {
        __extends(OperationInfo, _super);
        function OperationInfo(model, structureTypeName, id, isPartial, unit, container) {
            var _this = _super.call(this, model, structureTypeName, id, isPartial, unit, container) || this;
            /** @internal */
            _this.__name = new internal.PrimitiveProperty(OperationInfo, _this, "name", "", internal.PrimitiveTypeEnum.String);
            /** @internal */
            _this.__documentation = new internal.PrimitiveProperty(OperationInfo, _this, "documentation", "", internal.PrimitiveTypeEnum.String);
            /** @internal */
            _this.__soapAction = new internal.PrimitiveProperty(OperationInfo, _this, "soapAction", "", internal.PrimitiveTypeEnum.String);
            /** @internal */
            _this.__requestHeaderRpcElement = new internal.PartProperty(OperationInfo, _this, "requestHeaderRpcElement", null, true);
            /** @internal */
            _this.__requestBodyRpcElement = new internal.PartProperty(OperationInfo, _this, "requestBodyRpcElement", null, true);
            /** @internal */
            _this.__responseBodyRpcElement = new internal.PartProperty(OperationInfo, _this, "responseBodyRpcElement", null, true);
            /** @internal */
            _this.__requestHeaderElementName = new internal.PrimitiveProperty(OperationInfo, _this, "requestHeaderElementName", "", internal.PrimitiveTypeEnum.String);
            /** @internal */
            _this.__requestHeaderEncoded = new internal.PrimitiveProperty(OperationInfo, _this, "requestHeaderEncoded", false, internal.PrimitiveTypeEnum.Boolean);
            /** @internal */
            _this.__requestHeaderPartEncoding = new internal.PartProperty(OperationInfo, _this, "requestHeaderPartEncoding", null, false);
            /** @internal */
            _this.__requestBodyEncoded = new internal.PrimitiveProperty(OperationInfo, _this, "requestBodyEncoded", false, internal.PrimitiveTypeEnum.Boolean);
            /** @internal */
            _this.__requestBodyElementName = new internal.PrimitiveProperty(OperationInfo, _this, "requestBodyElementName", "", internal.PrimitiveTypeEnum.String);
            /** @internal */
            _this.__requestBodyPartEncodings = new internal.PartListProperty(OperationInfo, _this, "requestBodyPartEncodings", []);
            /** @internal */
            _this.__responseBodyElementName = new internal.PrimitiveProperty(OperationInfo, _this, "responseBodyElementName", "", internal.PrimitiveTypeEnum.String);
            /** @internal */
            _this.__allowSimpleMappingInheritance = new internal.PrimitiveProperty(OperationInfo, _this, "allowSimpleMappingInheritance", false, internal.PrimitiveTypeEnum.Boolean);
            if (arguments.length < 4) {
                throw new Error("new OperationInfo() cannot be invoked directly, please use 'model.webservices.createOperationInfo()'");
            }
            return _this;
        }
        Object.defineProperty(OperationInfo.prototype, "containerAsServiceInfo", {
            get: function () { return _super.prototype.getContainerAs.call(this, ServiceInfo); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(OperationInfo.prototype, "name", {
            get: function () { return this.__name.get(); },
            set: function (newValue) { this.__name.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(OperationInfo.prototype, "documentation", {
            get: function () { return this.__documentation.get(); },
            set: function (newValue) { this.__documentation.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(OperationInfo.prototype, "soapAction", {
            get: function () { return this.__soapAction.get(); },
            set: function (newValue) { this.__soapAction.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(OperationInfo.prototype, "requestHeaderRpcElement", {
            get: function () { return this.__requestHeaderRpcElement.get(); },
            set: function (newValue) { this.__requestHeaderRpcElement.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(OperationInfo.prototype, "requestBodyRpcElement", {
            get: function () { return this.__requestBodyRpcElement.get(); },
            set: function (newValue) { this.__requestBodyRpcElement.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(OperationInfo.prototype, "responseBodyRpcElement", {
            get: function () { return this.__responseBodyRpcElement.get(); },
            set: function (newValue) { this.__responseBodyRpcElement.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(OperationInfo.prototype, "requestHeaderElementName", {
            get: function () { return this.__requestHeaderElementName.get(); },
            set: function (newValue) { this.__requestHeaderElementName.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(OperationInfo.prototype, "requestHeaderEncoded", {
            get: function () { return this.__requestHeaderEncoded.get(); },
            set: function (newValue) { this.__requestHeaderEncoded.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(OperationInfo.prototype, "requestHeaderPartEncoding", {
            get: function () { return this.__requestHeaderPartEncoding.get(); },
            set: function (newValue) { this.__requestHeaderPartEncoding.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(OperationInfo.prototype, "requestBodyEncoded", {
            get: function () { return this.__requestBodyEncoded.get(); },
            set: function (newValue) { this.__requestBodyEncoded.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(OperationInfo.prototype, "requestBodyElementName", {
            get: function () { return this.__requestBodyElementName.get(); },
            set: function (newValue) { this.__requestBodyElementName.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(OperationInfo.prototype, "requestBodyPartEncodings", {
            get: function () { return this.__requestBodyPartEncodings.get(); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(OperationInfo.prototype, "responseBodyElementName", {
            get: function () { return this.__responseBodyElementName.get(); },
            set: function (newValue) { this.__responseBodyElementName.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(OperationInfo.prototype, "allowSimpleMappingInheritance", {
            /**
             * In version 6.1.0: deleted
             */
            get: function () { return this.__allowSimpleMappingInheritance.get(); },
            set: function (newValue) { this.__allowSimpleMappingInheritance.set(newValue); },
            enumerable: true,
            configurable: true
        });
        /**
         * Creates and returns a new OperationInfo instance in the SDK and on the server.
         * The new OperationInfo will be automatically stored in the 'operations' property
         * of the parent ServiceInfo element passed as argument.
         */
        OperationInfo.createIn = function (container) {
            return internal.instancehelpers.createElement(container, OperationInfo, "operations", true);
        };
        /**
         * Creates and returns a new OperationInfo instance in the SDK and on the server.
         * Expects one argument: the IModel object the instance will "live on".
         * After creation, assign or add this instance to a property that accepts this kind of objects.
         */
        OperationInfo.create = function (model) {
            return internal.instancehelpers.createElement(model, OperationInfo);
        };
        /** @internal */
        OperationInfo.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
            this.requestBodyRpcElement = RpcOperationElement.create(this.model);
            this.requestHeaderRpcElement = RpcOperationElement.create(this.model);
            this.responseBodyRpcElement = RpcOperationElement.create(this.model);
        };
        OperationInfo.structureTypeName = "WebServices$OperationInfo";
        OperationInfo.versionInfo = new exports.StructureVersionInfo({
            "properties": {
                "requestHeaderRpcElement": {
                    "required": {
                        "currentValue": true
                    }
                },
                "requestBodyRpcElement": {
                    "required": {
                        "currentValue": true
                    }
                },
                "responseBodyRpcElement": {
                    "required": {
                        "currentValue": true
                    }
                },
                "allowSimpleMappingInheritance": {
                    "deleted": "6.1.0",
                    "deletionMessage": null
                }
            }
        }, internal.StructureType.Element);
        return OperationInfo;
    }(internal.Element));
    webservices.OperationInfo = OperationInfo;
    var PartEncoding = /** @class */ (function (_super) {
        __extends(PartEncoding, _super);
        function PartEncoding(model, structureTypeName, id, isPartial, unit, container) {
            var _this = _super.call(this, model, structureTypeName, id, isPartial, unit, container) || this;
            /** @internal */
            _this.__partName = new internal.PrimitiveProperty(PartEncoding, _this, "partName", "", internal.PrimitiveTypeEnum.String);
            /** @internal */
            _this.__partXsdType = new internal.PrimitiveProperty(PartEncoding, _this, "partXsdType", "", internal.PrimitiveTypeEnum.String);
            if (arguments.length < 4) {
                throw new Error("new PartEncoding() cannot be invoked directly, please use 'model.webservices.createPartEncoding()'");
            }
            return _this;
        }
        Object.defineProperty(PartEncoding.prototype, "containerAsOperationInfo", {
            get: function () { return _super.prototype.getContainerAs.call(this, OperationInfo); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PartEncoding.prototype, "partName", {
            get: function () { return this.__partName.get(); },
            set: function (newValue) { this.__partName.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PartEncoding.prototype, "partXsdType", {
            get: function () { return this.__partXsdType.get(); },
            set: function (newValue) { this.__partXsdType.set(newValue); },
            enumerable: true,
            configurable: true
        });
        /**
         * Creates and returns a new PartEncoding instance in the SDK and on the server.
         * The new PartEncoding will be automatically stored in the 'requestBodyPartEncodings' property
         * of the parent OperationInfo element passed as argument.
         */
        PartEncoding.createInOperationInfoUnderRequestBodyPartEncodings = function (container) {
            return internal.instancehelpers.createElement(container, PartEncoding, "requestBodyPartEncodings", true);
        };
        /**
         * Creates and returns a new PartEncoding instance in the SDK and on the server.
         * The new PartEncoding will be automatically stored in the 'requestHeaderPartEncoding' property
         * of the parent OperationInfo element passed as argument.
         */
        PartEncoding.createInOperationInfoUnderRequestHeaderPartEncoding = function (container) {
            return internal.instancehelpers.createElement(container, PartEncoding, "requestHeaderPartEncoding", false);
        };
        /**
         * Creates and returns a new PartEncoding instance in the SDK and on the server.
         * Expects one argument: the IModel object the instance will "live on".
         * After creation, assign or add this instance to a property that accepts this kind of objects.
         */
        PartEncoding.create = function (model) {
            return internal.instancehelpers.createElement(model, PartEncoding);
        };
        /** @internal */
        PartEncoding.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
        };
        PartEncoding.structureTypeName = "WebServices$PartEncoding";
        PartEncoding.versionInfo = new exports.StructureVersionInfo({}, internal.StructureType.Element);
        return PartEncoding;
    }(internal.Element));
    webservices.PartEncoding = PartEncoding;
    var PublishedServiceBase = /** @class */ (function (_super) {
        __extends(PublishedServiceBase, _super);
        function PublishedServiceBase(model, structureTypeName, id, isPartial, container) {
            var _this = _super.call(this, model, structureTypeName, id, isPartial, container) || this;
            /** @internal */
            _this.__versionedServices = new internal.PartListProperty(PublishedServiceBase, _this, "versionedServices", []);
            return _this;
        }
        Object.defineProperty(PublishedServiceBase.prototype, "containerAsFolderBase", {
            get: function () { return _super.prototype.getContainerAs.call(this, projects_1.projects.FolderBase); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PublishedServiceBase.prototype, "versionedServices", {
            get: function () { return this.__versionedServices.get(); },
            enumerable: true,
            configurable: true
        });
        /** @internal */
        PublishedServiceBase.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
        };
        PublishedServiceBase.structureTypeName = "WebServices$PublishedServiceBase";
        PublishedServiceBase.versionInfo = new exports.StructureVersionInfo({}, internal.StructureType.ModelUnit);
        return PublishedServiceBase;
    }(projects_1.projects.Document));
    webservices.PublishedServiceBase = PublishedServiceBase;
    /**
     * See: {@link https://docs.mendix.com/refguide7/published-app-services relevant section in reference guide}
     */
    var PublishedAppService = /** @class */ (function (_super) {
        __extends(PublishedAppService, _super);
        function PublishedAppService(model, structureTypeName, id, isPartial, container) {
            var _this = _super.call(this, model, structureTypeName, id, isPartial, container) || this;
            _this._containmentName = "documents";
            return _this;
        }
        Object.defineProperty(PublishedAppService.prototype, "containerAsFolderBase", {
            get: function () { return _super.prototype.getContainerAs.call(this, projects_1.projects.FolderBase); },
            enumerable: true,
            configurable: true
        });
        /**
         * Creates a new PublishedAppService unit in the SDK and on the server.
         * Expects one argument, the projects.IFolderBase in which this unit is contained.
         */
        PublishedAppService.createIn = function (container) {
            return internal.instancehelpers.createUnit(container, PublishedAppService);
        };
        /** @internal */
        PublishedAppService.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
        };
        PublishedAppService.structureTypeName = "WebServices$PublishedAppService";
        PublishedAppService.versionInfo = new exports.StructureVersionInfo({}, internal.StructureType.ModelUnit);
        return PublishedAppService;
    }(PublishedServiceBase));
    webservices.PublishedAppService = PublishedAppService;
    var PublishedResource = /** @class */ (function (_super) {
        __extends(PublishedResource, _super);
        function PublishedResource(model, structureTypeName, id, isPartial, unit, container) {
            var _this = _super.call(this, model, structureTypeName, id, isPartial, unit, container) || this;
            /** @internal */
            _this.__dataEntity = new internal.PartProperty(PublishedResource, _this, "dataEntity", null, true);
            if (arguments.length < 4) {
                throw new Error("new PublishedResource() cannot be invoked directly, please use 'model.webservices.createPublishedResource()'");
            }
            return _this;
        }
        Object.defineProperty(PublishedResource.prototype, "containerAsPublishedODataService", {
            get: function () { return _super.prototype.getContainerAs.call(this, rest_1.rest.PublishedODataService); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PublishedResource.prototype, "containerAsVersionedService", {
            get: function () { return _super.prototype.getContainerAs.call(this, VersionedService); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PublishedResource.prototype, "dataEntity", {
            get: function () { return this.__dataEntity.get(); },
            set: function (newValue) { this.__dataEntity.set(newValue); },
            enumerable: true,
            configurable: true
        });
        /** @internal */
        PublishedResource.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
            this.dataEntity = DataEntity.create(this.model);
        };
        PublishedResource.structureTypeName = "WebServices$PublishedResource";
        PublishedResource.versionInfo = new exports.StructureVersionInfo({
            "properties": {
                "dataEntity": {
                    "required": {
                        "currentValue": true
                    }
                }
            }
        }, internal.StructureType.Element);
        return PublishedResource;
    }(internal.Element));
    webservices.PublishedResource = PublishedResource;
    var PublishedOperation = /** @class */ (function (_super) {
        __extends(PublishedOperation, _super);
        function PublishedOperation(model, structureTypeName, id, isPartial, unit, container) {
            var _this = _super.call(this, model, structureTypeName, id, isPartial, unit, container) || this;
            /** @internal */
            _this.__isLockedByContract = new internal.PrimitiveProperty(PublishedOperation, _this, "isLockedByContract", false, internal.PrimitiveTypeEnum.Boolean);
            /** @internal */
            _this.__name = new internal.PrimitiveProperty(PublishedOperation, _this, "name", "", internal.PrimitiveTypeEnum.String);
            /** @internal */
            _this.__image = new internal.ByNameReferenceProperty(PublishedOperation, _this, "image", null, "Images$Image");
            /** @internal */
            _this.__description = new internal.PrimitiveProperty(PublishedOperation, _this, "description", "", internal.PrimitiveTypeEnum.String);
            /** @internal */
            _this.__documentation = new internal.PrimitiveProperty(PublishedOperation, _this, "documentation", "", internal.PrimitiveTypeEnum.String);
            /** @internal */
            _this.__microflow = new internal.ByNameReferenceProperty(PublishedOperation, _this, "microflow", null, "Microflows$Microflow");
            /** @internal */
            _this.__parameters = new internal.PartListProperty(PublishedOperation, _this, "parameters", []);
            /** @internal */
            _this.__returnTypeNameByContract = new internal.PrimitiveProperty(PublishedOperation, _this, "returnTypeNameByContract", "", internal.PrimitiveTypeEnum.String);
            /** @internal */
            _this.__returnTypeSpecificationByContract = new internal.PrimitiveProperty(PublishedOperation, _this, "returnTypeSpecificationByContract", "", internal.PrimitiveTypeEnum.String);
            /** @internal */
            _this.__entityExposedNameByContract = new internal.PrimitiveProperty(PublishedOperation, _this, "entityExposedNameByContract", "", internal.PrimitiveTypeEnum.String);
            /** @internal */
            _this.__entityExposedName = new internal.PrimitiveProperty(PublishedOperation, _this, "entityExposedName", "", internal.PrimitiveTypeEnum.String);
            /** @internal */
            _this.__returnType = new internal.PrimitiveProperty(PublishedOperation, _this, "returnType", "", internal.PrimitiveTypeEnum.String);
            /** @internal */
            _this.__operationReturnType = new internal.PartProperty(PublishedOperation, _this, "operationReturnType", null, true);
            /** @internal */
            _this.__returnTypeIsOptional = new internal.PrimitiveProperty(PublishedOperation, _this, "returnTypeIsOptional", false, internal.PrimitiveTypeEnum.Boolean);
            /** @internal */
            _this.__returnTypeIsNillable = new internal.PrimitiveProperty(PublishedOperation, _this, "returnTypeIsNillable", false, internal.PrimitiveTypeEnum.Boolean);
            if (arguments.length < 4) {
                throw new Error("new PublishedOperation() cannot be invoked directly, please use 'model.webservices.createPublishedOperation()'");
            }
            return _this;
        }
        Object.defineProperty(PublishedOperation.prototype, "containerAsVersionedService", {
            get: function () { return _super.prototype.getContainerAs.call(this, VersionedService); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PublishedOperation.prototype, "isLockedByContract", {
            get: function () { return this.__isLockedByContract.get(); },
            set: function (newValue) { this.__isLockedByContract.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PublishedOperation.prototype, "name", {
            get: function () { return this.__name.get(); },
            set: function (newValue) { this.__name.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PublishedOperation.prototype, "image", {
            get: function () { return this.__image.get(); },
            set: function (newValue) { this.__image.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PublishedOperation.prototype, "imageQualifiedName", {
            get: function () { return this.__image.qualifiedName(); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PublishedOperation.prototype, "description", {
            get: function () { return this.__description.get(); },
            set: function (newValue) { this.__description.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PublishedOperation.prototype, "documentation", {
            get: function () { return this.__documentation.get(); },
            set: function (newValue) { this.__documentation.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PublishedOperation.prototype, "microflow", {
            get: function () { return this.__microflow.get(); },
            set: function (newValue) { this.__microflow.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PublishedOperation.prototype, "microflowQualifiedName", {
            get: function () { return this.__microflow.qualifiedName(); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PublishedOperation.prototype, "parameters", {
            get: function () { return this.__parameters.get(); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PublishedOperation.prototype, "returnTypeNameByContract", {
            get: function () { return this.__returnTypeNameByContract.get(); },
            set: function (newValue) { this.__returnTypeNameByContract.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PublishedOperation.prototype, "returnTypeSpecificationByContract", {
            get: function () { return this.__returnTypeSpecificationByContract.get(); },
            set: function (newValue) { this.__returnTypeSpecificationByContract.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PublishedOperation.prototype, "entityExposedNameByContract", {
            get: function () { return this.__entityExposedNameByContract.get(); },
            set: function (newValue) { this.__entityExposedNameByContract.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PublishedOperation.prototype, "entityExposedName", {
            get: function () { return this.__entityExposedName.get(); },
            set: function (newValue) { this.__entityExposedName.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PublishedOperation.prototype, "returnType", {
            /**
             * The value of this property is conceptually of type dataTypes.LegacyDataType.
             *
             * In version 7.9.0: deleted
             */
            get: function () { return this.__returnType.get(); },
            set: function (newValue) { this.__returnType.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PublishedOperation.prototype, "operationReturnType", {
            /**
             * In version 7.9.0: introduced
             */
            get: function () { return this.__operationReturnType.get(); },
            set: function (newValue) { this.__operationReturnType.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PublishedOperation.prototype, "returnTypeIsOptional", {
            get: function () { return this.__returnTypeIsOptional.get(); },
            set: function (newValue) { this.__returnTypeIsOptional.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PublishedOperation.prototype, "returnTypeIsNillable", {
            get: function () { return this.__returnTypeIsNillable.get(); },
            set: function (newValue) { this.__returnTypeIsNillable.set(newValue); },
            enumerable: true,
            configurable: true
        });
        /**
         * Creates and returns a new PublishedOperation instance in the SDK and on the server.
         * The new PublishedOperation will be automatically stored in the 'operations' property
         * of the parent VersionedService element passed as argument.
         */
        PublishedOperation.createIn = function (container) {
            return internal.instancehelpers.createElement(container, PublishedOperation, "operations", true);
        };
        /**
         * Creates and returns a new PublishedOperation instance in the SDK and on the server.
         * Expects one argument: the IModel object the instance will "live on".
         * After creation, assign or add this instance to a property that accepts this kind of objects.
         */
        PublishedOperation.create = function (model) {
            return internal.instancehelpers.createElement(model, PublishedOperation);
        };
        /** @internal */
        PublishedOperation.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
            this.entityExposedName = "Result";
            if (this.__operationReturnType.isAvailable) {
                this.operationReturnType = datatypes_1.datatypes.VoidType.create(this.model);
            }
            if (this.__returnType.isAvailable) {
                this.returnType = "Void";
            }
            this.returnTypeNameByContract = "Nothing";
        };
        PublishedOperation.structureTypeName = "WebServices$PublishedOperation";
        PublishedOperation.versionInfo = new exports.StructureVersionInfo({
            "properties": {
                "returnType": {
                    "deleted": "7.9.0",
                    "deletionMessage": "Use property 'operationReturnType' instead"
                },
                "operationReturnType": {
                    "introduced": "7.9.0",
                    "required": {
                        "currentValue": true
                    }
                }
            }
        }, internal.StructureType.Element);
        return PublishedOperation;
    }(PublishedResource));
    webservices.PublishedOperation = PublishedOperation;
    var PublishedParameter = /** @class */ (function (_super) {
        __extends(PublishedParameter, _super);
        function PublishedParameter(model, structureTypeName, id, isPartial, unit, container) {
            var _this = _super.call(this, model, structureTypeName, id, isPartial, unit, container) || this;
            /** @internal */
            _this.__isLockedByContract = new internal.PrimitiveProperty(PublishedParameter, _this, "isLockedByContract", false, internal.PrimitiveTypeEnum.Boolean);
            /** @internal */
            _this.__parameter = new internal.ByNameReferenceProperty(PublishedParameter, _this, "parameter", null, "Microflows$MicroflowParameter");
            /** @internal */
            _this.__parameterByContract = new internal.PartProperty(PublishedParameter, _this, "parameterByContract", null, true);
            /** @internal */
            _this.__entityExposedName = new internal.PrimitiveProperty(PublishedParameter, _this, "entityExposedName", "", internal.PrimitiveTypeEnum.String);
            /** @internal */
            _this.__isOptionalByContract = new internal.PrimitiveProperty(PublishedParameter, _this, "isOptionalByContract", false, internal.PrimitiveTypeEnum.Boolean);
            /** @internal */
            _this.__isOptional = new internal.PrimitiveProperty(PublishedParameter, _this, "isOptional", false, internal.PrimitiveTypeEnum.Boolean);
            /** @internal */
            _this.__isNillable = new internal.PrimitiveProperty(PublishedParameter, _this, "isNillable", false, internal.PrimitiveTypeEnum.Boolean);
            /** @internal */
            _this.__entityExposedItemNameByContract = new internal.PrimitiveProperty(PublishedParameter, _this, "entityExposedItemNameByContract", "", internal.PrimitiveTypeEnum.String);
            /** @internal */
            _this.__entityExposedItemName = new internal.PrimitiveProperty(PublishedParameter, _this, "entityExposedItemName", "", internal.PrimitiveTypeEnum.String);
            /** @internal */
            _this.__type = new internal.PrimitiveProperty(PublishedParameter, _this, "type", "", internal.PrimitiveTypeEnum.String);
            /** @internal */
            _this.__parameterType = new internal.PartProperty(PublishedParameter, _this, "parameterType", null, true);
            /** @internal */
            _this.__dataEntity = new internal.PartProperty(PublishedParameter, _this, "dataEntity", null, true);
            if (arguments.length < 4) {
                throw new Error("new PublishedParameter() cannot be invoked directly, please use 'model.webservices.createPublishedParameter()'");
            }
            return _this;
        }
        Object.defineProperty(PublishedParameter.prototype, "containerAsPublishedOperation", {
            get: function () { return _super.prototype.getContainerAs.call(this, PublishedOperation); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PublishedParameter.prototype, "isLockedByContract", {
            get: function () { return this.__isLockedByContract.get(); },
            set: function (newValue) { this.__isLockedByContract.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PublishedParameter.prototype, "parameter", {
            get: function () { return this.__parameter.get(); },
            set: function (newValue) { this.__parameter.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PublishedParameter.prototype, "parameterQualifiedName", {
            get: function () { return this.__parameter.qualifiedName(); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PublishedParameter.prototype, "parameterByContract", {
            get: function () { return this.__parameterByContract.get(); },
            set: function (newValue) { this.__parameterByContract.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PublishedParameter.prototype, "entityExposedName", {
            get: function () { return this.__entityExposedName.get(); },
            set: function (newValue) { this.__entityExposedName.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PublishedParameter.prototype, "isOptionalByContract", {
            get: function () { return this.__isOptionalByContract.get(); },
            set: function (newValue) { this.__isOptionalByContract.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PublishedParameter.prototype, "isOptional", {
            get: function () { return this.__isOptional.get(); },
            set: function (newValue) { this.__isOptional.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PublishedParameter.prototype, "isNillable", {
            get: function () { return this.__isNillable.get(); },
            set: function (newValue) { this.__isNillable.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PublishedParameter.prototype, "entityExposedItemNameByContract", {
            get: function () { return this.__entityExposedItemNameByContract.get(); },
            set: function (newValue) { this.__entityExposedItemNameByContract.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PublishedParameter.prototype, "entityExposedItemName", {
            get: function () { return this.__entityExposedItemName.get(); },
            set: function (newValue) { this.__entityExposedItemName.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PublishedParameter.prototype, "type", {
            /**
             * The value of this property is conceptually of type dataTypes.LegacyDataType.
             *
             * In version 7.9.0: deleted
             */
            get: function () { return this.__type.get(); },
            set: function (newValue) { this.__type.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PublishedParameter.prototype, "parameterType", {
            /**
             * In version 7.9.0: introduced
             */
            get: function () { return this.__parameterType.get(); },
            set: function (newValue) { this.__parameterType.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PublishedParameter.prototype, "dataEntity", {
            get: function () { return this.__dataEntity.get(); },
            set: function (newValue) { this.__dataEntity.set(newValue); },
            enumerable: true,
            configurable: true
        });
        /**
         * Creates and returns a new PublishedParameter instance in the SDK and on the server.
         * The new PublishedParameter will be automatically stored in the 'parameters' property
         * of the parent PublishedOperation element passed as argument.
         */
        PublishedParameter.createIn = function (container) {
            return internal.instancehelpers.createElement(container, PublishedParameter, "parameters", true);
        };
        /**
         * Creates and returns a new PublishedParameter instance in the SDK and on the server.
         * Expects one argument: the IModel object the instance will "live on".
         * After creation, assign or add this instance to a property that accepts this kind of objects.
         */
        PublishedParameter.create = function (model) {
            return internal.instancehelpers.createElement(model, PublishedParameter);
        };
        /** @internal */
        PublishedParameter.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
            this.dataEntity = DataEntity.create(this.model);
            this.parameterByContract = appservices_1.appservices.MsdMicroflowParameter.create(this.model);
            if (this.__parameterType.isAvailable) {
                this.parameterType = datatypes_1.datatypes.VoidType.create(this.model);
            }
            if (this.__type.isAvailable) {
                this.type = "Void";
            }
        };
        PublishedParameter.structureTypeName = "WebServices$PublishedParameter";
        PublishedParameter.versionInfo = new exports.StructureVersionInfo({
            "properties": {
                "parameterByContract": {
                    "required": {
                        "currentValue": true
                    }
                },
                "type": {
                    "deleted": "7.9.0",
                    "deletionMessage": "Use property 'parameterType' instead"
                },
                "parameterType": {
                    "introduced": "7.9.0",
                    "required": {
                        "currentValue": true
                    }
                },
                "dataEntity": {
                    "required": {
                        "currentValue": true
                    }
                }
            }
        }, internal.StructureType.Element);
        return PublishedParameter;
    }(internal.Element));
    webservices.PublishedParameter = PublishedParameter;
    /**
     * See: {@link https://docs.mendix.com/refguide7/published-web-services relevant section in reference guide}
     */
    var PublishedWebService = /** @class */ (function (_super) {
        __extends(PublishedWebService, _super);
        function PublishedWebService(model, structureTypeName, id, isPartial, container) {
            var _this = _super.call(this, model, structureTypeName, id, isPartial, container) || this;
            _this._containmentName = "documents";
            return _this;
        }
        Object.defineProperty(PublishedWebService.prototype, "containerAsFolderBase", {
            get: function () { return _super.prototype.getContainerAs.call(this, projects_1.projects.FolderBase); },
            enumerable: true,
            configurable: true
        });
        /**
         * Creates a new PublishedWebService unit in the SDK and on the server.
         * Expects one argument, the projects.IFolderBase in which this unit is contained.
         */
        PublishedWebService.createIn = function (container) {
            return internal.instancehelpers.createUnit(container, PublishedWebService);
        };
        /** @internal */
        PublishedWebService.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
        };
        PublishedWebService.structureTypeName = "WebServices$PublishedWebService";
        PublishedWebService.versionInfo = new exports.StructureVersionInfo({}, internal.StructureType.ModelUnit);
        return PublishedWebService;
    }(PublishedServiceBase));
    webservices.PublishedWebService = PublishedWebService;
    var RpcMessagePartElement = /** @class */ (function (_super) {
        __extends(RpcMessagePartElement, _super);
        function RpcMessagePartElement(model, structureTypeName, id, isPartial, unit, container) {
            var _this = _super.call(this, model, structureTypeName, id, isPartial, unit, container) || this;
            /** @internal */
            _this.__partName = new internal.PrimitiveProperty(RpcMessagePartElement, _this, "partName", "", internal.PrimitiveTypeEnum.String);
            /** @internal */
            _this.__typeName = new internal.PrimitiveProperty(RpcMessagePartElement, _this, "typeName", "", internal.PrimitiveTypeEnum.String);
            /** @internal */
            _this.__elementName = new internal.PrimitiveProperty(RpcMessagePartElement, _this, "elementName", "", internal.PrimitiveTypeEnum.String);
            if (arguments.length < 4) {
                throw new Error("new RpcMessagePartElement() cannot be invoked directly, please use 'model.webservices.createRpcMessagePartElement()'");
            }
            return _this;
        }
        Object.defineProperty(RpcMessagePartElement.prototype, "containerAsRpcOperationElement", {
            get: function () { return _super.prototype.getContainerAs.call(this, RpcOperationElement); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(RpcMessagePartElement.prototype, "partName", {
            get: function () { return this.__partName.get(); },
            set: function (newValue) { this.__partName.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(RpcMessagePartElement.prototype, "typeName", {
            get: function () { return this.__typeName.get(); },
            set: function (newValue) { this.__typeName.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(RpcMessagePartElement.prototype, "elementName", {
            get: function () { return this.__elementName.get(); },
            set: function (newValue) { this.__elementName.set(newValue); },
            enumerable: true,
            configurable: true
        });
        /**
         * Creates and returns a new RpcMessagePartElement instance in the SDK and on the server.
         * The new RpcMessagePartElement will be automatically stored in the 'messagePartElements' property
         * of the parent RpcOperationElement element passed as argument.
         */
        RpcMessagePartElement.createIn = function (container) {
            return internal.instancehelpers.createElement(container, RpcMessagePartElement, "messagePartElements", true);
        };
        /**
         * Creates and returns a new RpcMessagePartElement instance in the SDK and on the server.
         * Expects one argument: the IModel object the instance will "live on".
         * After creation, assign or add this instance to a property that accepts this kind of objects.
         */
        RpcMessagePartElement.create = function (model) {
            return internal.instancehelpers.createElement(model, RpcMessagePartElement);
        };
        /** @internal */
        RpcMessagePartElement.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
        };
        RpcMessagePartElement.structureTypeName = "WebServices$RpcMessagePartElement";
        RpcMessagePartElement.versionInfo = new exports.StructureVersionInfo({}, internal.StructureType.Element);
        return RpcMessagePartElement;
    }(internal.Element));
    webservices.RpcMessagePartElement = RpcMessagePartElement;
    var RpcOperationElement = /** @class */ (function (_super) {
        __extends(RpcOperationElement, _super);
        function RpcOperationElement(model, structureTypeName, id, isPartial, unit, container) {
            var _this = _super.call(this, model, structureTypeName, id, isPartial, unit, container) || this;
            /** @internal */
            _this.__name = new internal.PrimitiveProperty(RpcOperationElement, _this, "name", "", internal.PrimitiveTypeEnum.String);
            /** @internal */
            _this.__messagePartElements = new internal.PartListProperty(RpcOperationElement, _this, "messagePartElements", []);
            if (arguments.length < 4) {
                throw new Error("new RpcOperationElement() cannot be invoked directly, please use 'model.webservices.createRpcOperationElement()'");
            }
            return _this;
        }
        Object.defineProperty(RpcOperationElement.prototype, "containerAsOperationInfo", {
            get: function () { return _super.prototype.getContainerAs.call(this, OperationInfo); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(RpcOperationElement.prototype, "name", {
            get: function () { return this.__name.get(); },
            set: function (newValue) { this.__name.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(RpcOperationElement.prototype, "messagePartElements", {
            get: function () { return this.__messagePartElements.get(); },
            enumerable: true,
            configurable: true
        });
        /**
         * Creates and returns a new RpcOperationElement instance in the SDK and on the server.
         * The new RpcOperationElement will be automatically stored in the 'requestBodyRpcElement' property
         * of the parent OperationInfo element passed as argument.
         */
        RpcOperationElement.createInOperationInfoUnderRequestBodyRpcElement = function (container) {
            return internal.instancehelpers.createElement(container, RpcOperationElement, "requestBodyRpcElement", false);
        };
        /**
         * Creates and returns a new RpcOperationElement instance in the SDK and on the server.
         * The new RpcOperationElement will be automatically stored in the 'requestHeaderRpcElement' property
         * of the parent OperationInfo element passed as argument.
         */
        RpcOperationElement.createInOperationInfoUnderRequestHeaderRpcElement = function (container) {
            return internal.instancehelpers.createElement(container, RpcOperationElement, "requestHeaderRpcElement", false);
        };
        /**
         * Creates and returns a new RpcOperationElement instance in the SDK and on the server.
         * The new RpcOperationElement will be automatically stored in the 'responseBodyRpcElement' property
         * of the parent OperationInfo element passed as argument.
         */
        RpcOperationElement.createInOperationInfoUnderResponseBodyRpcElement = function (container) {
            return internal.instancehelpers.createElement(container, RpcOperationElement, "responseBodyRpcElement", false);
        };
        /**
         * Creates and returns a new RpcOperationElement instance in the SDK and on the server.
         * Expects one argument: the IModel object the instance will "live on".
         * After creation, assign or add this instance to a property that accepts this kind of objects.
         */
        RpcOperationElement.create = function (model) {
            return internal.instancehelpers.createElement(model, RpcOperationElement);
        };
        /** @internal */
        RpcOperationElement.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
        };
        RpcOperationElement.structureTypeName = "WebServices$RpcOperationElement";
        RpcOperationElement.versionInfo = new exports.StructureVersionInfo({}, internal.StructureType.Element);
        return RpcOperationElement;
    }(internal.Element));
    webservices.RpcOperationElement = RpcOperationElement;
    var ServiceInfo = /** @class */ (function (_super) {
        __extends(ServiceInfo, _super);
        function ServiceInfo(model, structureTypeName, id, isPartial, unit, container) {
            var _this = _super.call(this, model, structureTypeName, id, isPartial, unit, container) || this;
            /** @internal */
            _this.__name = new internal.PrimitiveProperty(ServiceInfo, _this, "name", "", internal.PrimitiveTypeEnum.String);
            /** @internal */
            _this.__documentation = new internal.PrimitiveProperty(ServiceInfo, _this, "documentation", "", internal.PrimitiveTypeEnum.String);
            /** @internal */
            _this.__portName = new internal.PrimitiveProperty(ServiceInfo, _this, "portName", "", internal.PrimitiveTypeEnum.String);
            /** @internal */
            _this.__location = new internal.PrimitiveProperty(ServiceInfo, _this, "location", "", internal.PrimitiveTypeEnum.String);
            /** @internal */
            _this.__soapVersion = new internal.EnumProperty(ServiceInfo, _this, "soapVersion", SoapVersion.Soap11, SoapVersion);
            /** @internal */
            _this.__locationConstant = new internal.ByNameReferenceProperty(ServiceInfo, _this, "locationConstant", null, "Constants$Constant");
            /** @internal */
            _this.__operations = new internal.PartListProperty(ServiceInfo, _this, "operations", []);
            if (arguments.length < 4) {
                throw new Error("new ServiceInfo() cannot be invoked directly, please use 'model.webservices.createServiceInfo()'");
            }
            return _this;
        }
        Object.defineProperty(ServiceInfo.prototype, "containerAsWsdlDescription", {
            get: function () { return _super.prototype.getContainerAs.call(this, WsdlDescription); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ServiceInfo.prototype, "name", {
            get: function () { return this.__name.get(); },
            set: function (newValue) { this.__name.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ServiceInfo.prototype, "documentation", {
            get: function () { return this.__documentation.get(); },
            set: function (newValue) { this.__documentation.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ServiceInfo.prototype, "portName", {
            get: function () { return this.__portName.get(); },
            set: function (newValue) { this.__portName.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ServiceInfo.prototype, "location", {
            get: function () { return this.__location.get(); },
            set: function (newValue) { this.__location.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ServiceInfo.prototype, "soapVersion", {
            get: function () { return this.__soapVersion.get(); },
            set: function (newValue) { this.__soapVersion.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ServiceInfo.prototype, "locationConstant", {
            get: function () { return this.__locationConstant.get(); },
            set: function (newValue) { this.__locationConstant.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ServiceInfo.prototype, "locationConstantQualifiedName", {
            get: function () { return this.__locationConstant.qualifiedName(); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ServiceInfo.prototype, "operations", {
            get: function () { return this.__operations.get(); },
            enumerable: true,
            configurable: true
        });
        /**
         * Creates and returns a new ServiceInfo instance in the SDK and on the server.
         * The new ServiceInfo will be automatically stored in the 'services' property
         * of the parent WsdlDescription element passed as argument.
         */
        ServiceInfo.createIn = function (container) {
            return internal.instancehelpers.createElement(container, ServiceInfo, "services", true);
        };
        /**
         * Creates and returns a new ServiceInfo instance in the SDK and on the server.
         * Expects one argument: the IModel object the instance will "live on".
         * After creation, assign or add this instance to a property that accepts this kind of objects.
         */
        ServiceInfo.create = function (model) {
            return internal.instancehelpers.createElement(model, ServiceInfo);
        };
        /** @internal */
        ServiceInfo.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
            this.soapVersion = SoapVersion.Soap11;
        };
        ServiceInfo.structureTypeName = "WebServices$ServiceInfo";
        ServiceInfo.versionInfo = new exports.StructureVersionInfo({}, internal.StructureType.Element);
        return ServiceInfo;
    }(internal.Element));
    webservices.ServiceInfo = ServiceInfo;
    /**
     * In version 6.7.0: introduced
     */
    var SystemIdDataAttribute = /** @class */ (function (_super) {
        __extends(SystemIdDataAttribute, _super);
        function SystemIdDataAttribute(model, structureTypeName, id, isPartial, unit, container) {
            var _this = _super.call(this, model, structureTypeName, id, isPartial, unit, container) || this;
            /** @internal */
            _this.__entity = new internal.ByNameReferenceProperty(SystemIdDataAttribute, _this, "entity", null, "DomainModels$Entity");
            if (arguments.length < 4) {
                throw new Error("new SystemIdDataAttribute() cannot be invoked directly, please use 'model.webservices.createSystemIdDataAttribute()'");
            }
            return _this;
        }
        Object.defineProperty(SystemIdDataAttribute.prototype, "containerAsDataEntityBase", {
            get: function () { return _super.prototype.getContainerAs.call(this, DataEntityBase); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SystemIdDataAttribute.prototype, "entity", {
            get: function () { return this.__entity.get(); },
            set: function (newValue) { this.__entity.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SystemIdDataAttribute.prototype, "entityQualifiedName", {
            get: function () { return this.__entity.qualifiedName(); },
            enumerable: true,
            configurable: true
        });
        /**
         * Creates and returns a new SystemIdDataAttribute instance in the SDK and on the server.
         * The new SystemIdDataAttribute will be automatically stored in the 'childMembers' property
         * of the parent DataEntityBase element passed as argument.
         *
         * Warning! Can only be used on models with the following Mendix meta model versions:
         *  6.7.0 and higher
         */
        SystemIdDataAttribute.createIn = function (container) {
            internal.createInVersionCheck(container.model, SystemIdDataAttribute.structureTypeName, { start: "6.7.0" });
            return internal.instancehelpers.createElement(container, SystemIdDataAttribute, "childMembers", true);
        };
        /**
         * Creates and returns a new SystemIdDataAttribute instance in the SDK and on the server.
         * Expects one argument: the IModel object the instance will "live on".
         * After creation, assign or add this instance to a property that accepts this kind of objects.
         */
        SystemIdDataAttribute.create = function (model) {
            return internal.instancehelpers.createElement(model, SystemIdDataAttribute);
        };
        /** @internal */
        SystemIdDataAttribute.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
        };
        SystemIdDataAttribute.structureTypeName = "WebServices$SystemIdDataAttribute";
        SystemIdDataAttribute.versionInfo = new exports.StructureVersionInfo({
            "introduced": "6.7.0"
        }, internal.StructureType.Element);
        return SystemIdDataAttribute;
    }(DataMember));
    webservices.SystemIdDataAttribute = SystemIdDataAttribute;
    /**
     * See: {@link https://docs.mendix.com/refguide7/published-web-services relevant section in reference guide}
     */
    var VersionedService = /** @class */ (function (_super) {
        __extends(VersionedService, _super);
        function VersionedService(model, structureTypeName, id, isPartial, unit, container) {
            var _this = _super.call(this, model, structureTypeName, id, isPartial, unit, container) || this;
            /** @internal */
            _this.__documentation = new internal.PrimitiveProperty(VersionedService, _this, "documentation", "", internal.PrimitiveTypeEnum.String);
            /** @internal */
            _this.__targetNamespace = new internal.PrimitiveProperty(VersionedService, _this, "targetNamespace", "", internal.PrimitiveTypeEnum.String);
            /** @internal */
            _this.__headerAuthentication = new internal.EnumProperty(VersionedService, _this, "headerAuthentication", HeaderAuthentication.None, HeaderAuthentication);
            /** @internal */
            _this.__operations = new internal.PartListProperty(VersionedService, _this, "operations", []);
            /** @internal */
            _this.__isLockedByContract = new internal.PrimitiveProperty(VersionedService, _this, "isLockedByContract", false, internal.PrimitiveTypeEnum.Boolean);
            /** @internal */
            _this.__enumerationsByContract = new internal.PartProperty(VersionedService, _this, "enumerationsByContract", null, false);
            /** @internal */
            _this.__headerImportMapping = new internal.ByNameReferenceProperty(VersionedService, _this, "headerImportMapping", null, "ImportMappings$ImportMapping");
            /** @internal */
            _this.__headerMicroflow = new internal.ByNameReferenceProperty(VersionedService, _this, "headerMicroflow", null, "Microflows$Microflow");
            /** @internal */
            _this.__versionNumber = new internal.PrimitiveProperty(VersionedService, _this, "versionNumber", 0, internal.PrimitiveTypeEnum.Integer);
            /** @internal */
            _this.__caption = new internal.PrimitiveProperty(VersionedService, _this, "caption", "", internal.PrimitiveTypeEnum.String);
            /** @internal */
            _this.__description = new internal.PrimitiveProperty(VersionedService, _this, "description", "", internal.PrimitiveTypeEnum.String);
            /** @internal */
            _this.__appServiceState = new internal.EnumProperty(VersionedService, _this, "appServiceState", AppServiceState.Draft, AppServiceState);
            /** @internal */
            _this.__image = new internal.ByNameReferenceProperty(VersionedService, _this, "image", null, "Images$Image");
            /** @internal */
            _this.__validate = new internal.PrimitiveProperty(VersionedService, _this, "validate", false, internal.PrimitiveTypeEnum.Boolean);
            if (arguments.length < 4) {
                throw new Error("new VersionedService() cannot be invoked directly, please use 'model.webservices.createVersionedService()'");
            }
            return _this;
        }
        Object.defineProperty(VersionedService.prototype, "containerAsPublishedServiceBase", {
            get: function () { return _super.prototype.getContainerAs.call(this, PublishedServiceBase); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VersionedService.prototype, "documentation", {
            get: function () { return this.__documentation.get(); },
            set: function (newValue) { this.__documentation.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VersionedService.prototype, "targetNamespace", {
            get: function () { return this.__targetNamespace.get(); },
            set: function (newValue) { this.__targetNamespace.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VersionedService.prototype, "headerAuthentication", {
            get: function () { return this.__headerAuthentication.get(); },
            set: function (newValue) { this.__headerAuthentication.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VersionedService.prototype, "operations", {
            get: function () { return this.__operations.get(); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VersionedService.prototype, "isLockedByContract", {
            get: function () { return this.__isLockedByContract.get(); },
            set: function (newValue) { this.__isLockedByContract.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VersionedService.prototype, "enumerationsByContract", {
            get: function () { return this.__enumerationsByContract.get(); },
            set: function (newValue) { this.__enumerationsByContract.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VersionedService.prototype, "headerImportMapping", {
            get: function () { return this.__headerImportMapping.get(); },
            set: function (newValue) { this.__headerImportMapping.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VersionedService.prototype, "headerImportMappingQualifiedName", {
            get: function () { return this.__headerImportMapping.qualifiedName(); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VersionedService.prototype, "headerMicroflow", {
            get: function () { return this.__headerMicroflow.get(); },
            set: function (newValue) { this.__headerMicroflow.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VersionedService.prototype, "headerMicroflowQualifiedName", {
            get: function () { return this.__headerMicroflow.qualifiedName(); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VersionedService.prototype, "versionNumber", {
            get: function () { return this.__versionNumber.get(); },
            set: function (newValue) { this.__versionNumber.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VersionedService.prototype, "caption", {
            get: function () { return this.__caption.get(); },
            set: function (newValue) { this.__caption.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VersionedService.prototype, "description", {
            get: function () { return this.__description.get(); },
            set: function (newValue) { this.__description.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VersionedService.prototype, "appServiceState", {
            get: function () { return this.__appServiceState.get(); },
            set: function (newValue) { this.__appServiceState.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VersionedService.prototype, "image", {
            get: function () { return this.__image.get(); },
            set: function (newValue) { this.__image.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VersionedService.prototype, "imageQualifiedName", {
            get: function () { return this.__image.qualifiedName(); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VersionedService.prototype, "validate", {
            get: function () { return this.__validate.get(); },
            set: function (newValue) { this.__validate.set(newValue); },
            enumerable: true,
            configurable: true
        });
        /**
         * Creates and returns a new VersionedService instance in the SDK and on the server.
         * The new VersionedService will be automatically stored in the 'versionedServices' property
         * of the parent PublishedServiceBase element passed as argument.
         */
        VersionedService.createIn = function (container) {
            return internal.instancehelpers.createElement(container, VersionedService, "versionedServices", true);
        };
        /**
         * Creates and returns a new VersionedService instance in the SDK and on the server.
         * Expects one argument: the IModel object the instance will "live on".
         * After creation, assign or add this instance to a property that accepts this kind of objects.
         */
        VersionedService.create = function (model) {
            return internal.instancehelpers.createElement(model, VersionedService);
        };
        /** @internal */
        VersionedService.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
            this.appServiceState = AppServiceState.Draft;
            this.headerAuthentication = HeaderAuthentication.None;
            this.targetNamespace = "http://www.example.com/";
        };
        VersionedService.structureTypeName = "WebServices$VersionedService";
        VersionedService.versionInfo = new exports.StructureVersionInfo({}, internal.StructureType.Element);
        return VersionedService;
    }(internal.Element));
    webservices.VersionedService = VersionedService;
    var WsdlDescription = /** @class */ (function (_super) {
        __extends(WsdlDescription, _super);
        function WsdlDescription(model, structureTypeName, id, isPartial, unit, container) {
            var _this = _super.call(this, model, structureTypeName, id, isPartial, unit, container) || this;
            /** @internal */
            _this.__wsdlEntries = new internal.PartListProperty(WsdlDescription, _this, "wsdlEntries", []);
            /** @internal */
            _this.__schemaEntries = new internal.PartListProperty(WsdlDescription, _this, "schemaEntries", []);
            /** @internal */
            _this.__services = new internal.PartListProperty(WsdlDescription, _this, "services", []);
            /** @internal */
            _this.__targetNamespace = new internal.PrimitiveProperty(WsdlDescription, _this, "targetNamespace", "", internal.PrimitiveTypeEnum.String);
            /** @internal */
            _this.__importsHaveLocations = new internal.PrimitiveProperty(WsdlDescription, _this, "importsHaveLocations", false, internal.PrimitiveTypeEnum.Boolean);
            if (arguments.length < 4) {
                throw new Error("new WsdlDescription() cannot be invoked directly, please use 'model.webservices.createWsdlDescription()'");
            }
            return _this;
        }
        Object.defineProperty(WsdlDescription.prototype, "containerAsMsd", {
            get: function () { return _super.prototype.getContainerAs.call(this, appservices_1.appservices.Msd); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(WsdlDescription.prototype, "containerAsImportedWebService", {
            get: function () { return _super.prototype.getContainerAs.call(this, ImportedWebService); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(WsdlDescription.prototype, "wsdlEntries", {
            get: function () { return this.__wsdlEntries.get(); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(WsdlDescription.prototype, "schemaEntries", {
            get: function () { return this.__schemaEntries.get(); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(WsdlDescription.prototype, "services", {
            get: function () { return this.__services.get(); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(WsdlDescription.prototype, "targetNamespace", {
            get: function () { return this.__targetNamespace.get(); },
            set: function (newValue) { this.__targetNamespace.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(WsdlDescription.prototype, "importsHaveLocations", {
            get: function () { return this.__importsHaveLocations.get(); },
            set: function (newValue) { this.__importsHaveLocations.set(newValue); },
            enumerable: true,
            configurable: true
        });
        /**
         * Creates and returns a new WsdlDescription instance in the SDK and on the server.
         * The new WsdlDescription will be automatically stored in the 'wsdlDescription' property
         * of the parent appservices.Msd element passed as argument.
         */
        WsdlDescription.createInMsdUnderWsdlDescription = function (container) {
            return internal.instancehelpers.createElement(container, WsdlDescription, "wsdlDescription", false);
        };
        /**
         * Creates and returns a new WsdlDescription instance in the SDK and on the server.
         * The new WsdlDescription will be automatically stored in the 'wsdlDescription' property
         * of the parent ImportedWebService element passed as argument.
         */
        WsdlDescription.createInImportedWebServiceUnderWsdlDescription = function (container) {
            return internal.instancehelpers.createElement(container, WsdlDescription, "wsdlDescription", false);
        };
        /**
         * Creates and returns a new WsdlDescription instance in the SDK and on the server.
         * Expects one argument: the IModel object the instance will "live on".
         * After creation, assign or add this instance to a property that accepts this kind of objects.
         */
        WsdlDescription.create = function (model) {
            return internal.instancehelpers.createElement(model, WsdlDescription);
        };
        /** @internal */
        WsdlDescription.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
        };
        WsdlDescription.structureTypeName = "WebServices$WsdlDescription";
        WsdlDescription.versionInfo = new exports.StructureVersionInfo({}, internal.StructureType.Element);
        return WsdlDescription;
    }(internal.Element));
    webservices.WsdlDescription = WsdlDescription;
    var WsdlEntry = /** @class */ (function (_super) {
        __extends(WsdlEntry, _super);
        function WsdlEntry(model, structureTypeName, id, isPartial, unit, container) {
            var _this = _super.call(this, model, structureTypeName, id, isPartial, unit, container) || this;
            /** @internal */
            _this.__location = new internal.PrimitiveProperty(WsdlEntry, _this, "location", "", internal.PrimitiveTypeEnum.String);
            /** @internal */
            _this.__contents = new internal.PrimitiveProperty(WsdlEntry, _this, "contents", "", internal.PrimitiveTypeEnum.String);
            /** @internal */
            _this.__localizedLocationFormat = new internal.PrimitiveProperty(WsdlEntry, _this, "localizedLocationFormat", "", internal.PrimitiveTypeEnum.String);
            /** @internal */
            _this.__localizedContentsFormat = new internal.PrimitiveProperty(WsdlEntry, _this, "localizedContentsFormat", "", internal.PrimitiveTypeEnum.String);
            if (arguments.length < 4) {
                throw new Error("new WsdlEntry() cannot be invoked directly, please use 'model.webservices.createWsdlEntry()'");
            }
            return _this;
        }
        Object.defineProperty(WsdlEntry.prototype, "containerAsWsdlDescription", {
            get: function () { return _super.prototype.getContainerAs.call(this, WsdlDescription); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(WsdlEntry.prototype, "location", {
            get: function () { return this.__location.get(); },
            set: function (newValue) { this.__location.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(WsdlEntry.prototype, "contents", {
            get: function () { return this.__contents.get(); },
            set: function (newValue) { this.__contents.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(WsdlEntry.prototype, "localizedLocationFormat", {
            get: function () { return this.__localizedLocationFormat.get(); },
            set: function (newValue) { this.__localizedLocationFormat.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(WsdlEntry.prototype, "localizedContentsFormat", {
            get: function () { return this.__localizedContentsFormat.get(); },
            set: function (newValue) { this.__localizedContentsFormat.set(newValue); },
            enumerable: true,
            configurable: true
        });
        /**
         * Creates and returns a new WsdlEntry instance in the SDK and on the server.
         * The new WsdlEntry will be automatically stored in the 'wsdlEntries' property
         * of the parent WsdlDescription element passed as argument.
         */
        WsdlEntry.createIn = function (container) {
            return internal.instancehelpers.createElement(container, WsdlEntry, "wsdlEntries", true);
        };
        /**
         * Creates and returns a new WsdlEntry instance in the SDK and on the server.
         * Expects one argument: the IModel object the instance will "live on".
         * After creation, assign or add this instance to a property that accepts this kind of objects.
         */
        WsdlEntry.create = function (model) {
            return internal.instancehelpers.createElement(model, WsdlEntry);
        };
        /** @internal */
        WsdlEntry.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
        };
        WsdlEntry.structureTypeName = "WebServices$WsdlEntry";
        WsdlEntry.versionInfo = new exports.StructureVersionInfo({}, internal.StructureType.Element);
        return WsdlEntry;
    }(internal.Element));
    webservices.WsdlEntry = WsdlEntry;
})(webservices = exports.webservices || (exports.webservices = {}));
var appservices_1 = require("./appservices");
var datatypes_1 = require("./datatypes");
var rest_1 = require("./rest");
//# sourceMappingURL=webservices.js.map